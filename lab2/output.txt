Error while trying to load a compilation database:
Could not auto-detect compilation database for file "src/Bounds.cpp"
No compilation database found in /home/solar/Desktop/tdp/lab2/src or any parent directory
json-compilation-database: Error while opening JSON database: No such file or directory
fixed-compilation-database: Error while opening fixed database: No such file or directory
Running without flags.
[1/7] Processing file /home/solar/Desktop/tdp/lab2/src/Bounds.cpp.
149918 warnings generated.
[2/7] Processing file /home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp.
303017 warnings generated.
[3/7] Processing file /home/solar/Desktop/tdp/lab2/src/ColoringState.cpp.
435316 warnings generated.
[4/7] Processing file /home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp.
581814 warnings generated.
[5/7] Processing file /home/solar/Desktop/tdp/lab2/src/Graph.cpp.
712863 warnings generated.
[6/7] Processing file /home/solar/Desktop/tdp/lab2/src/main.cpp.
866722 warnings generated.
[7/7] Processing file /home/solar/Desktop/tdp/lab2/src/Solve.cpp.
1020135 warnings generated.
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:4:9: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
    4 | Bounds::Bounds(const Graph &g)
      |         ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:4:22: warning: no header providing "Graph" is directly included [misc-include-cleaner]
    3 |
    4 | Bounds::Bounds(const Graph &g)
      |                      ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:4:29: warning: parameter name 'g' is too short, expected at least 3 characters [readability-identifier-length]
    4 | Bounds::Bounds(const Graph &g)
      |                             ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:8:15: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
    8 |     maxClique = findMaximalClique();
      |               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:766:7: note: resolves to this declaration
  766 |       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
      |       ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:9:18: warning: narrowing conversion from 'size_type' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    9 |     lowerBound = maxClique.size();
      |                  ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:10:5: warning: 'upperBound' should be initialized in a member initializer of the constructor [cppcoreguidelines-prefer-member-initializer]
    5 |     : graph(g), lowerBound(1), upperBound(g.getVertexCount()),
      |                                           ~~~~~~~~~~~~~~~~~~
      |                                           calculateUpperBound()
    6 |       bestColoring(nullptr) {
    7 |
    8 |     maxClique = findMaximalClique();
    9 |     lowerBound = maxClique.size();
   10 |     upperBound = calculateUpperBound();
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:13:1: warning: no header providing "std::vector" is directly included [misc-include-cleaner]
    3 |
    4 | Bounds::Bounds(const Graph &g)
    5 |     : graph(g), lowerBound(1), upperBound(g.getVertexCount()),
    6 |       bestColoring(nullptr) {
    7 |
    8 |     maxClique = findMaximalClique();
    9 |     lowerBound = maxClique.size();
   10 |     upperBound = calculateUpperBound();
   11 | }
   12 |
   13 | vector<int> Bounds::findMaximalClique() const {
      | ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:13:21: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   13 | vector<int> Bounds::findMaximalClique() const {
      |                     ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:13:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   13 | vector<int> Bounds::findMaximalClique() const {
      | ~~~~~~~~~~~         ^
      | auto                                          -> vector<int>
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:18:5: warning: 'sort<__gnu_cxx::__normal_iterator<std::pair<int, int> *, std::vector<std::pair<int, int>>>, (lambda at /home/solar/Desktop/tdp/lab2/src/Bounds.cpp:19:10)>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   18 |     sort(vertices.begin(), vertices.end(),
      |     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_algo.h:4792:5: note: resolves to this declaration
 4792 |     sort(_RandomAccessIterator __first, _RandomAccessIterator __last,
      |     ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:18:5: warning: no header providing "std::sort" is directly included [misc-include-cleaner]
    3 |
    4 | Bounds::Bounds(const Graph &g)
    5 |     : graph(g), lowerBound(1), upperBound(g.getVertexCount()),
    6 |       bestColoring(nullptr) {
    7 |
    8 |     maxClique = findMaximalClique();
    9 |     lowerBound = maxClique.size();
   10 |     upperBound = calculateUpperBound();
   11 | }
   12 |
   13 | vector<int> Bounds::findMaximalClique() const {
   14 |     vector<int> clique;
   15 |
   16 |     // Ordenar vertices por grado descendente
   17 |     auto vertices = getVerticesByDegree();
   18 |     sort(vertices.begin(), vertices.end(),
      |     ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:19:25: warning: parameter name 'a' is too short, expected at least 3 characters [readability-identifier-length]
   19 |          [](const auto &a, const auto &b) { return a.second > b.second; });
      |                         ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:19:40: warning: parameter name 'b' is too short, expected at least 3 characters [readability-identifier-length]
   19 |          [](const auto &a, const auto &b) { return a.second > b.second; });
      |                                        ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:23:39: warning: 'operator!=<std::pair<int, int> *, std::vector<std::pair<int, int>>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   23 |     for (const auto &[vertex, degree] : vertices) {
      |                                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1232:5: note: resolves to this declaration
 1232 |     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:23:39: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   23 |     for (const auto &[vertex, degree] : vertices) {
      |                                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:23:39: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   23 |     for (const auto &[vertex, degree] : vertices) {
      |                                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:26:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   26 |         for (int v : clique) {
      |         ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:26:14: warning: variable 'v' of type 'int' can be declared 'const' [misc-const-correctness]
   26 |         for (int v : clique) {
      |              ^
      |                  const
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:26:18: warning: variable name 'v' is too short, expected at least 3 characters [readability-identifier-length]
   26 |         for (int v : clique) {
      |                  ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:26:20: warning: 'operator!=<int *, std::vector<int>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   26 |         for (int v : clique) {
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1232:5: note: resolves to this declaration
 1232 |     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:26:20: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   26 |         for (int v : clique) {
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:26:20: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   26 |         for (int v : clique) {
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:40:8: warning: no header providing "std::pair" is directly included [misc-include-cleaner]
    3 | vector<pair<int, int>> Bounds::getVerticesByDegree() const {
      |        ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:40:32: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   40 | vector<pair<int, int>> Bounds::getVerticesByDegree() const {
      |                                ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:40:32: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   40 | vector<pair<int, int>> Bounds::getVerticesByDegree() const {
      | ~~~~~~~~~~~~~~~~~~~~~~         ^
      | auto                                                       -> vector<pair<int, int>>
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:45:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   45 |     for (int v = 0; v < graph.getVertexCount(); v++) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:45:14: warning: loop variable name 'v' is too short, expected at least 2 characters [readability-identifier-length]
   45 |     for (int v = 0; v < graph.getVertexCount(); v++) {
      |              ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:52:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   52 | int Bounds::calculateUpperBound() {
      |             ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:52:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   52 | int Bounds::calculateUpperBound() {
      | ~~~         ^
      | auto                              -> int
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:53:5: warning: no header providing "DangerHeuristic" is directly included [misc-include-cleaner]
    3 |     DangerHeuristic danger(graph);
      |     ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:58:47: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   58 |         coloring.getNumColors() < bestColoring->getNumColors()) {
      |                                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/unique_ptr.h:454:7: note: resolves to this declaration
  454 |       operator->() const noexcept
      |       ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:59:22: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   59 |         bestColoring =
      |                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/unique_ptr.h:408:19: note: resolves to this declaration
  408 |       unique_ptr& operator=(unique_ptr&&) = default;
      |                   ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:60:13: warning: 'make_unique<ColoringState, const Graph &, int>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   60 |             std::make_unique<ColoringState>(graph, coloring.getNumColors());
      |             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/unique_ptr.h:1075:5: note: resolves to this declaration
 1075 |     make_unique(_Args&&... __args)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:60:18: warning: no header providing "std::make_unique" is directly included [misc-include-cleaner]
    3 |             std::make_unique<ColoringState>(graph, coloring.getNumColors());
      |                  ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:62:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   62 |         for (int v = 0; v < graph.getVertexCount(); v++) {
      |         ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:62:18: warning: loop variable name 'v' is too short, expected at least 2 characters [readability-identifier-length]
   62 |         for (int v = 0; v < graph.getVertexCount(); v++) {
      |                  ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:63:25: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   63 |             bestColoring->assignColor(v, coloring.getColor(v));
      |                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/unique_ptr.h:454:7: note: resolves to this declaration
  454 |       operator->() const noexcept
      |       ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:70:14: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   70 | void Bounds::updateLowerBound(int newBound) {
      |              ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:76:14: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   76 | void Bounds::updateUpperBound(int newBound, const ColoringState &coloring) {
      |              ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:79:22: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   79 |         bestColoring =
      |                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/unique_ptr.h:408:19: note: resolves to this declaration
  408 |       unique_ptr& operator=(unique_ptr&&) = default;
      |                   ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:80:13: warning: 'make_unique<ColoringState, const Graph &, int>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   80 |             std::make_unique<ColoringState>(graph, coloring.getNumColors());
      |             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/unique_ptr.h:1075:5: note: resolves to this declaration
 1075 |     make_unique(_Args&&... __args)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:83:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   83 |         for (int v = 0; v < graph.getVertexCount(); v++) {
      |         ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:83:18: warning: loop variable name 'v' is too short, expected at least 2 characters [readability-identifier-length]
   83 |         for (int v = 0; v < graph.getVertexCount(); v++) {
      |                  ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:84:25: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   84 |             bestColoring->assignColor(v, coloring.getColor(v));
      |                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/unique_ptr.h:454:7: note: resolves to this declaration
  454 |       operator->() const noexcept
      |       ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:3:17: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
    3 | BranchAndBound::BranchAndBound(const Graph &g, Bounds &b, DangerHeuristic &d,
      |                 ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:3:38: warning: no header providing "Graph" is directly included [misc-include-cleaner]
    2 |
    3 | BranchAndBound::BranchAndBound(const Graph &g, Bounds &b, DangerHeuristic &d,
      |                                      ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:3:45: warning: parameter name 'g' is too short, expected at least 3 characters [readability-identifier-length]
    3 | BranchAndBound::BranchAndBound(const Graph &g, Bounds &b, DangerHeuristic &d,
      |                                             ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:3:48: warning: no header providing "Bounds" is directly included [misc-include-cleaner]
    2 |
    3 | BranchAndBound::BranchAndBound(const Graph &g, Bounds &b, DangerHeuristic &d,
      |                                                ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:3:56: warning: parameter name 'b' is too short, expected at least 3 characters [readability-identifier-length]
    3 | BranchAndBound::BranchAndBound(const Graph &g, Bounds &b, DangerHeuristic &d,
      |                                                        ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:3:59: warning: no header providing "DangerHeuristic" is directly included [misc-include-cleaner]
    2 |
    3 | BranchAndBound::BranchAndBound(const Graph &g, Bounds &b, DangerHeuristic &d,
      |                                                           ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:3:76: warning: parameter name 'd' is too short, expected at least 3 characters [readability-identifier-length]
    3 | BranchAndBound::BranchAndBound(const Graph &g, Bounds &b, DangerHeuristic &d,
      |                                                                            ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:4:58: warning: no header providing "std::chrono::milliseconds" is directly included [misc-include-cleaner]
    2 |
    3 | BranchAndBound::BranchAndBound(const Graph &g, Bounds &b, DangerHeuristic &d,
    4 |                                int maxIter, std::chrono::milliseconds tLimit)
      |                                                          ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:8:22: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
    8 | void BranchAndBound::solve(ColoringState &solution) {
      |                      ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:8:28: warning: no header providing "ColoringState" is directly included [misc-include-cleaner]
    2 |
    3 | BranchAndBound::BranchAndBound(const Graph &g, Bounds &b, DangerHeuristic &d,
    4 |                                int maxIter, std::chrono::milliseconds tLimit)
    5 |     : graph(g), bounds(b), dangerHeuristic(d), maxIterations(maxIter),
    6 |       timeLimit(tLimit) {}
    7 |
    8 | void BranchAndBound::solve(ColoringState &solution) {
      |                            ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:11:12: warning: backward branch (while loop) is ID-dependent due to variable reference to 'currentK' and may cause performance degradation [altera-id-dependent-backward-branch]
   11 |     while (currentK >= bounds.getLowerBound()) {
      |            ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:9:5: note: inferred assignment of ID-dependent value from ID-dependent
    9 |     int currentK = bounds.getUpperBound() - 1;
      |     ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:16:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   16 |         for (size_t i = 0; i < clique.size(); i++) {
      |         ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:16:14: warning: no header providing "size_t" is directly included [misc-include-cleaner]
    2 |
    3 | BranchAndBound::BranchAndBound(const Graph &g, Bounds &b, DangerHeuristic &d,
    4 |                                int maxIter, std::chrono::milliseconds tLimit)
    5 |     : graph(g), bounds(b), dangerHeuristic(d), maxIterations(maxIter),
    6 |       timeLimit(tLimit) {}
    7 |
    8 | void BranchAndBound::solve(ColoringState &solution) {
    9 |     int currentK = bounds.getUpperBound() - 1;
   10 |
   11 |     while (currentK >= bounds.getLowerBound()) {
   12 |         ColoringState currentState(graph, currentK);
   13 |
   14 |         // Colorear el clique inicial
   15 |         const auto &clique = bounds.getMaxClique();
   16 |         for (size_t i = 0; i < clique.size(); i++) {
      |              ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:16:28: warning: backward branch (for loop) is ID-dependent due to variable reference to 'clique' and may cause performance degradation [altera-id-dependent-backward-branch]
   16 |         for (size_t i = 0; i < clique.size(); i++) {
      |                            ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:15:9: note: inferred assignment of ID-dependent value from ID-dependent
   15 |         const auto &clique = bounds.getMaxClique();
      |         ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:17:44: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   17 |             currentState.assignColor(clique[i], i);
      |                                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:17:49: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
   17 |             currentState.assignColor(clique[i], i);
      |                                                 ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:22:22: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   22 |             solution = currentState;
      |                      ^
/home/solar/Desktop/tdp/lab2/src/../include/ColoringState.h:45:20: note: resolves to this declaration
   45 |     ColoringState &operator=(const ColoringState &other) {
      |                    ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:32:22: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   32 | bool BranchAndBound::branchAndBoundRecursive(ColoringState &state,
      |                      ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:32:22: warning: function 'branchAndBoundRecursive' is within a recursive call chain [misc-no-recursion]
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:32:22: note: example recursive call chain, starting from function 'branchAndBoundRecursive'
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:64:13: note: Frame #1: function 'branchAndBoundRecursive' calls function 'branchAndBoundRecursive' here:
   64 |         if (branchAndBoundRecursive(state, targetColors)) {
      |             ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:64:13: note: ... which was the starting point of the recursive call chain; there may be other cycles
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:32:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   32 | bool BranchAndBound::branchAndBoundRecursive(ColoringState &state,
      | ~~~~                 ^
      | auto
   33 |                                              int targetColors) {
      |                                                                -> bool
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:39:5: warning: variable 'vertex' of type 'int' can be declared 'const' [misc-const-correctness]
   39 |     int vertex = dangerHeuristic.selectNextVertex(state);
      |     ^
      |         const
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:40:22: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
   40 |     if (vertex == -1)
      |                      ^
      |                       {
   41 |         return false;
      |
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:44:5: warning: variable 'availableColors' of type 'vector<int>' can be declared 'const' [misc-const-correctness]
   44 |     vector<int> availableColors = state.getAvailableColors(vertex);
      |     ^
      |                 const
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:44:5: warning: no header providing "std::vector" is directly included [misc-include-cleaner]
    2 |     vector<int> availableColors = state.getAvailableColors(vertex);
      |     ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:45:12: warning: no header providing "std::pair" is directly included [misc-include-cleaner]
    2 |     vector<pair<int, double>> colorDangers;
      |            ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:47:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   47 |     for (int color : availableColors) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:47:10: warning: variable 'color' of type 'int' can be declared 'const' [misc-const-correctness]
   47 |     for (int color : availableColors) {
      |          ^
      |              const
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:47:20: warning: 'operator!=<int *, std::vector<int>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   47 |     for (int color : availableColors) {
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1232:5: note: resolves to this declaration
 1232 |     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:47:20: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   47 |     for (int color : availableColors) {
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:47:20: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   47 |     for (int color : availableColors) {
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:48:35: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
   48 |         if (color >= targetColors)
      |                                   ^
      |                                    {
   49 |             continue;
      |
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:51:13: warning: variable 'danger' of type 'double' can be declared 'const' [misc-const-correctness]
   51 |             double danger =
      |             ^
      |                    const
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:57:5: warning: 'sort<__gnu_cxx::__normal_iterator<std::pair<int, double> *, std::vector<std::pair<int, double>>>, (lambda at /home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:58:10)>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   57 |     sort(colorDangers.begin(), colorDangers.end(),
      |     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_algo.h:4792:5: note: resolves to this declaration
 4792 |     sort(_RandomAccessIterator __first, _RandomAccessIterator __last,
      |     ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:57:5: warning: no header providing "std::sort" is directly included [misc-include-cleaner]
    2 |     sort(colorDangers.begin(), colorDangers.end(),
      |     ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:58:25: warning: parameter name 'a' is too short, expected at least 3 characters [readability-identifier-length]
   58 |          [](const auto &a, const auto &b) { return a.second < b.second; });
      |                         ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:58:40: warning: parameter name 'b' is too short, expected at least 3 characters [readability-identifier-length]
   58 |          [](const auto &a, const auto &b) { return a.second < b.second; });
      |                                        ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:61:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   61 |     for (const auto &[color, danger] : colorDangers) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:61:38: warning: 'operator!=<std::pair<int, double> *, std::vector<std::pair<int, double>>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   61 |     for (const auto &[color, danger] : colorDangers) {
      |                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1232:5: note: resolves to this declaration
 1232 |     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:61:38: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   61 |     for (const auto &[color, danger] : colorDangers) {
      |                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:61:38: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   61 |     for (const auto &[color, danger] : colorDangers) {
      |                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:4:16: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
    4 | ColoringState::ColoringState(const Graph &g, int initialColors)
      |                ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:4:36: warning: no header providing "Graph" is directly included [misc-include-cleaner]
    3 |
    4 | ColoringState::ColoringState(const Graph &g, int initialColors)
      |                                    ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:4:43: warning: parameter name 'g' is too short, expected at least 3 characters [readability-identifier-length]
    4 | ColoringState::ColoringState(const Graph &g, int initialColors)
      |                                           ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:5:17: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
    5 |     : graph(g), colors(g.getVertexCount(), -1), numColors(0), numConflicts(0),
      |                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:570:7: note: default parameter was declared here
  570 |              const allocator_type& __a = allocator_type())
      |              ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:6:7: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
    6 |       colorClass(initialColors) {
      |       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:556:29: note: default parameter was declared here
  556 |       vector(size_type __n, const allocator_type& __a = allocator_type())
      |                             ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:7:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
    7 |     for (int v = 0; v < graph.getVertexCount(); v++) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:7:14: warning: loop variable name 'v' is too short, expected at least 2 characters [readability-identifier-length]
    7 |     for (int v = 0; v < graph.getVertexCount(); v++) {
      |              ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:12:21: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   12 | void ColoringState::assignColor(int vertex, int color) {
      |                     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:14:20: warning: no header providing "std::invalid_argument" is directly included [misc-include-cleaner]
    3 |
    4 | ColoringState::ColoringState(const Graph &g, int initialColors)
    5 |     : graph(g), colors(g.getVertexCount(), -1), numColors(0), numConflicts(0),
    6 |       colorClass(initialColors) {
    7 |     for (int v = 0; v < graph.getVertexCount(); v++) {
    8 |         uncoloredVertices.insert(v);
    9 |     }
   10 | }
   11 |
   12 | void ColoringState::assignColor(int vertex, int color) {
   13 |     if (vertex < 0 || vertex >= graph.getVertexCount() || color < 0) {
   14 |         throw std::invalid_argument("Invalid vertex or color");
      |                    ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:17:5: warning: variable 'oldColor' of type 'int' can be declared 'const' [misc-const-correctness]
   17 |     int oldColor = colors[vertex];
      |     ^
      |         const
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:17:26: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   17 |     int oldColor = colors[vertex];
      |                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1128:7: note: resolves to this declaration
 1128 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:22:24: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
   22 |         if (oldColor < (int)colorClass.size()) {
      |                        ^~~~~
      |                        static_cast<int>(     )
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:23:23: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   23 |             colorClass[oldColor].erase(vertex);
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1128:7: note: resolves to this declaration
 1128 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:30:18: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
   30 |     if (color >= (int)colorClass.size()) {
      |                  ^~~~~
      |                  static_cast<int>(     )
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:34:11: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   34 |     colors[vertex] = color;
      |           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1128:7: note: resolves to this declaration
 1128 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:35:15: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   35 |     colorClass[color].insert(vertex);
      |               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1128:7: note: resolves to this declaration
 1128 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:45:21: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   45 | bool ColoringState::isValidAssignment(int vertex, int color) const {
      |                     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:45:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   45 | bool ColoringState::isValidAssignment(int vertex, int color) const {
      | ~~~~                ^
      | auto                                                               -> bool
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:51:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   51 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:51:5: warning: replace loop by 'std::all_of()' [readability-use-anyofallof]
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:51:10: warning: variable 'neighbor' of type 'int' can be declared 'const' [misc-const-correctness]
   51 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |          ^
      |              const
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:51:23: warning: 'operator!=<int *, std::vector<int>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   51 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1232:5: note: resolves to this declaration
 1232 |     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:51:23: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   51 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:51:23: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   51 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:52:19: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   52 |         if (colors[neighbor] == color) {
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:59:1: warning: no header providing "std::vector" is directly included [misc-include-cleaner]
    3 | vector<int> ColoringState::getAvailableColors(int vertex) const {
      | ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:59:28: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   59 | vector<int> ColoringState::getAvailableColors(int vertex) const {
      |                            ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:59:28: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   59 | vector<int> ColoringState::getAvailableColors(int vertex) const {
      | ~~~~~~~~~~~                ^
      | auto                                                            -> vector<int>
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:60:5: warning: no header providing "std::vector" is directly included [misc-include-cleaner]
   60 |     vector<bool> usedColors(numColors + 1, false);
      |     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:60:18: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   60 |     vector<bool> usedColors(numColors + 1, false);
      |                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_bvector.h:796:7: note: default parameter was declared here
  796 |              const allocator_type& __a = allocator_type())
      |              ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:62:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   62 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:62:10: warning: variable 'neighbor' of type 'int' can be declared 'const' [misc-const-correctness]
   62 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |          ^
      |              const
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:62:23: warning: 'operator!=<int *, std::vector<int>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   62 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1232:5: note: resolves to this declaration
 1232 |     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:62:23: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   62 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:62:23: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   62 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:63:19: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   63 |         if (colors[neighbor] != -1) {
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:64:23: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   64 |             usedColors[colors[neighbor]] = true;
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_bvector.h:1086:7: note: resolves to this declaration
 1086 |       operator[](size_type __n)
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:64:30: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   64 |             usedColors[colors[neighbor]] = true;
      |                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:64:42: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   64 |             usedColors[colors[neighbor]] = true;
      |                                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_bvector.h:104:5: note: resolves to this declaration
  104 |     operator=(bool __x) _GLIBCXX_NOEXCEPT
      |     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:70:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   70 |     for (int c = 0; c < numColors + 1; c++) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:70:14: warning: loop variable name 'c' is too short, expected at least 2 characters [readability-identifier-length]
   70 |     for (int c = 0; c < numColors + 1; c++) {
      |              ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:70:21: warning: backward branch (for loop) is ID-dependent due to member reference to 'numColors' and may cause performance degradation [altera-id-dependent-backward-branch]
   70 |     for (int c = 0; c < numColors + 1; c++) {
      |                     ^
/home/solar/Desktop/tdp/lab2/src/../include/ColoringState.h:15:5: note: inferred assignment of ID-dependent member from ID-dependent
   15 |     int numColors;      // Numero de colores diferentes usados
      |     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:71:24: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   71 |         if (!usedColors[c]) {
      |                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_bvector.h:1086:7: note: resolves to this declaration
 1086 |       operator[](size_type __n)
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:78:21: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   78 | void ColoringState::updateConflicts() {
      |                     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:80:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   80 |     for (int v = 0; v < graph.getVertexCount(); v++) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:80:14: warning: loop variable name 'v' is too short, expected at least 2 characters [readability-identifier-length]
   80 |     for (int v = 0; v < graph.getVertexCount(); v++) {
      |              ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:87:21: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   87 | bool ColoringState::isConflicting(int vertex) const {
      |                     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:87:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   87 | bool ColoringState::isConflicting(int vertex) const {
      | ~~~~                ^
      | auto                                                -> bool
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:88:15: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   88 |     if (colors[vertex] == -1)
      |               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:88:30: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
   88 |     if (colors[vertex] == -1)
      |                              ^
      |                               {
   89 |         return false;
      |
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:91:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   91 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:91:5: warning: replace loop by 'std::any_of()' [readability-use-anyofallof]
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:91:10: warning: variable 'neighbor' of type 'int' can be declared 'const' [misc-const-correctness]
   91 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |          ^
      |              const
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:91:23: warning: 'operator!=<int *, std::vector<int>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   91 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1232:5: note: resolves to this declaration
 1232 |     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:91:23: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   91 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:91:23: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   91 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:92:19: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   92 |         if (colors[neighbor] == colors[vertex]) {
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:92:39: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   92 |         if (colors[neighbor] == colors[vertex]) {
      |                                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:99:21: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   99 | void ColoringState::updateColorClass(int vertex, int oldColor,
      |                     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:99:50: warning: 2 adjacent parameters of 'updateColorClass' of similar type ('int') are easily swapped by mistake [bugprone-easily-swappable-parameters]
   99 | void ColoringState::updateColorClass(int vertex, int oldColor,
      |                                                  ^~~~~~~~~~~~~
  100 |                                      int newColor) { // TODO: no se ejecuta
      |                                      ~~~~~~~~~~~~
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:99:54: note: the first parameter in the range is 'oldColor'
   99 | void ColoringState::updateColorClass(int vertex, int oldColor,
      |                                                      ^~~~~~~~
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:100:42: note: the last parameter in the range is 'newColor'
  100 |                                      int newColor) { // TODO: no se ejecuta
      |                                          ^~~~~~~~
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:100:42: warning: parameter 'newColor' is unused [misc-unused-parameters]
  100 |                                      int newColor) { // TODO: no se ejecuta
      |                                          ^~~~~~~~
      |                                           /*newColor*/
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:100:54: warning: missing username/bug in TODO [google-readability-todo]
  100 |                                      int newColor) { // TODO: no se ejecuta
      |                                                      ^~~~~~~~~~~~~~~~~~~~~~
      |                                                      // TODO(solar): no se ejecuta
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:102:15: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  102 |     colorClass[oldColor].erase(vertex);
      |               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1128:7: note: resolves to this declaration
 1128 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:105:28: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  105 | vector<int> ColoringState::getVerticesWithColor(int color) const {
      |                            ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:105:28: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  105 | vector<int> ColoringState::getVerticesWithColor(int color) const {
      | ~~~~~~~~~~~                ^
      | auto                                                             -> vector<int>
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:107:31: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
  107 |     if (color >= 0 && color < (int)colorClass.size()) {
      |                               ^~~~~
      |                               static_cast<int>(     )
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:108:36: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  108 |         vertices.reserve(colorClass[color].size());
      |                                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:109:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  109 |         for (const auto &vertex : colorClass[color]) {
      |         ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:109:33: warning: 'operator!=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  109 |         for (const auto &vertex : colorClass[color]) {
      |                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp:165:7: note: resolves to this declaration
  165 |       operator!=(const PB_DS_TREE_CONST_IT_C_DEC& other) const
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:109:33: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  109 |         for (const auto &vertex : colorClass[color]) {
      |                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp:150:7: note: resolves to this declaration
  150 |       operator*() const
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:109:33: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  109 |         for (const auto &vertex : colorClass[color]) {
      |                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp:173:7: note: resolves to this declaration
  173 |       operator++()
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:109:45: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  109 |         for (const auto &vertex : colorClass[color]) {
      |                                             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:116:20: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  116 | int ColoringState::getMaxUsedColor() const { return numColors - 1; }
      |                    ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:116:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  116 | int ColoringState::getMaxUsedColor() const { return numColors - 1; }
      | ~~~                ^
      | auto                                       -> int
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:118:20: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  118 | int ColoringState::getDeltaConflicts(
      |                    ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:118:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  118 | int ColoringState::getDeltaConflicts(
      | ~~~                ^
      | auto
  119 |     int vertex, int newColor) const { // TODO: NO SE EJECUTA
      |                                     -> int
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:119:39: warning: missing username/bug in TODO [google-readability-todo]
  119 |     int vertex, int newColor) const { // TODO: NO SE EJECUTA
      |                                       ^~~~~~~~~~~~~~~~~~~~~~
      |                                       // TODO(solar): NO SE EJECUTA
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:120:15: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  120 |     if (colors[vertex] == newColor)
      |               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:120:36: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  120 |     if (colors[vertex] == newColor)
      |                                    ^
      |                                     {
  121 |         return 0;
      |
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:125:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  125 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:125:10: warning: variable 'neighbor' of type 'int' can be declared 'const' [misc-const-correctness]
  125 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |          ^
      |              const
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:125:23: warning: 'operator!=<int *, std::vector<int>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  125 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1232:5: note: resolves to this declaration
 1232 |     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:125:23: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  125 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:125:23: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  125 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:126:19: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  126 |         if (colors[neighbor] == colors[vertex]) {
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:126:39: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  126 |         if (colors[neighbor] == colors[vertex]) {
      |                                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:132:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  132 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:132:10: warning: variable 'neighbor' of type 'int' can be declared 'const' [misc-const-correctness]
  132 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |          ^
      |              const
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:132:23: warning: 'operator!=<int *, std::vector<int>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  132 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1232:5: note: resolves to this declaration
 1232 |     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:132:23: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  132 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:132:23: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  132 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:133:19: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  133 |         if (colors[neighbor] == newColor) {
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:141:8: warning: no header providing "std::pair" is directly included [misc-include-cleaner]
    3 | vector<pair<int, int>>
      |        ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:142:16: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  142 | ColoringState::getConflictingPairs() const { // TODO: NO SE EJECUTA
      |                ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:142:16: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  141 | vector<pair<int, int>>
      | ~~~~~~~~~~~~~~~~~~~~~~
      | auto
  142 | ColoringState::getConflictingPairs() const { // TODO: NO SE EJECUTA
      |                ^
      |                                            -> vector<pair<int, int>>
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:142:46: warning: missing username/bug in TODO [google-readability-todo]
  142 | ColoringState::getConflictingPairs() const { // TODO: NO SE EJECUTA
      |                                              ^~~~~~~~~~~~~~~~~~~~~~
      |                                              // TODO(solar): NO SE EJECUTA
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:144:14: warning: loop variable name 'v' is too short, expected at least 2 characters [readability-identifier-length]
  144 |     for (int v = 0; v < graph.getVertexCount(); v++) {
      |              ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:145:19: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  145 |         if (colors[v] == -1)
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:145:29: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  145 |         if (colors[v] == -1)
      |                             ^
      |                              {
  146 |             continue;
      |
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:148:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  148 |         for (int u : graph.getNeighbors(v)) {
      |         ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:148:14: warning: variable 'u' of type 'int' can be declared 'const' [misc-const-correctness]
  148 |         for (int u : graph.getNeighbors(v)) {
      |              ^
      |                  const
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:148:18: warning: variable name 'u' is too short, expected at least 3 characters [readability-identifier-length]
  148 |         for (int u : graph.getNeighbors(v)) {
      |                  ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:148:20: warning: 'operator!=<int *, std::vector<int>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  148 |         for (int u : graph.getNeighbors(v)) {
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1232:5: note: resolves to this declaration
 1232 |     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:148:20: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  148 |         for (int u : graph.getNeighbors(v)) {
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:148:20: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  148 |         for (int u : graph.getNeighbors(v)) {
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:149:32: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  149 |             if (u > v && colors[u] == colors[v]) {
      |                                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:149:45: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  149 |             if (u > v && colors[u] == colors[v]) {
      |                                             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:157:21: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  157 | void ColoringState::print() const { // TODO: NO SE EJECUTA
      |                     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:157:37: warning: missing username/bug in TODO [google-readability-todo]
  157 | void ColoringState::print() const { // TODO: NO SE EJECUTA
      |                                     ^~~~~~~~~~~~~~~~~~~~~~
      |                                     // TODO(solar): NO SE EJECUTA
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:158:5: warning: no header providing "std::cout" is directly included [misc-include-cleaner]
    3 |     cout << "Current coloring state:" << endl;
      |     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:158:10: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  158 |     cout << "Current coloring state:" << endl;
      |          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:158:39: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  158 |     cout << "Current coloring state:" << endl;
      |                                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:158:42: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  158 |     cout << "Current coloring state:" << endl;
      |                                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:158:42: warning: no header providing "std::endl" is directly included [misc-include-cleaner]
    3 |     cout << "Current coloring state:" << endl;
      |                                          ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:158:42: warning: do not use 'endl' with streams; use '\n' instead [performance-avoid-endl]
  158 |     cout << "Current coloring state:" << endl;
      |                                          ^~~~
      |                                          '\n'
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:159:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  159 |     for (int v = 0; v < graph.getVertexCount(); v++) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:159:14: warning: loop variable name 'v' is too short, expected at least 2 characters [readability-identifier-length]
  159 |     for (int v = 0; v < graph.getVertexCount(); v++) {
      |              ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:160:14: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  160 |         cout << "Vertex " << v << ": Color " << colors[v] << endl;
      |              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:160:27: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  160 |         cout << "Vertex " << v << ": Color " << colors[v] << endl;
      |                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:197:7: note: resolves to this declaration
  197 |       operator<<(int __n);
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:160:32: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  160 |         cout << "Vertex " << v << ": Color " << colors[v] << endl;
      |                                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:160:46: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  160 |         cout << "Vertex " << v << ": Color " << colors[v] << endl;
      |                                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:197:7: note: resolves to this declaration
  197 |       operator<<(int __n);
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:160:55: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  160 |         cout << "Vertex " << v << ": Color " << colors[v] << endl;
      |                                                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:160:59: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  160 |         cout << "Vertex " << v << ": Color " << colors[v] << endl;
      |                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:160:62: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  160 |         cout << "Vertex " << v << ": Color " << colors[v] << endl;
      |                                                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:160:62: warning: do not use 'endl' with streams; use '\n' instead [performance-avoid-endl]
  160 |         cout << "Vertex " << v << ": Color " << colors[v] << endl;
      |                                                              ^~~~
      |                                                              '\n'
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:162:10: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  162 |     cout << "Number of colors used: " << numColors << endl;
      |          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:162:39: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  162 |     cout << "Number of colors used: " << numColors << endl;
      |                                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:197:7: note: resolves to this declaration
  197 |       operator<<(int __n);
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:162:52: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  162 |     cout << "Number of colors used: " << numColors << endl;
      |                                                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:162:55: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  162 |     cout << "Number of colors used: " << numColors << endl;
      |                                                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:162:55: warning: do not use 'endl' with streams; use '\n' instead [performance-avoid-endl]
  162 |     cout << "Number of colors used: " << numColors << endl;
      |                                                       ^~~~
      |                                                       '\n'
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:163:10: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  163 |     cout << "Number of conflicts: " << numConflicts << endl;
      |          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:163:37: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  163 |     cout << "Number of conflicts: " << numConflicts << endl;
      |                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:197:7: note: resolves to this declaration
  197 |       operator<<(int __n);
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:163:53: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  163 |     cout << "Number of conflicts: " << numConflicts << endl;
      |                                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:163:56: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  163 |     cout << "Number of conflicts: " << numConflicts << endl;
      |                                                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:163:56: warning: do not use 'endl' with streams; use '\n' instead [performance-avoid-endl]
  163 |     cout << "Number of conflicts: " << numConflicts << endl;
      |                                                        ^~~~
      |                                                        '\n'
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:164:10: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  164 |     cout << "Uncolored vertices: " << uncoloredVertices.size() << endl;
      |          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:164:36: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  164 |     cout << "Uncolored vertices: " << uncoloredVertices.size() << endl;
      |                                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:178:7: note: resolves to this declaration
  178 |       operator<<(unsigned long __n)
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:164:64: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  164 |     cout << "Uncolored vertices: " << uncoloredVertices.size() << endl;
      |                                                                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:164:67: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  164 |     cout << "Uncolored vertices: " << uncoloredVertices.size() << endl;
      |                                                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/solar/Desktop/tdp/lab2/src/ColoringState.cpp:164:67: warning: do not use 'endl' with streams; use '\n' instead [performance-avoid-endl]
  164 |     cout << "Uncolored vertices: " << uncoloredVertices.size() << endl;
      |                                                                   ^~~~
      |                                                                   '\n'
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:4:18: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
    4 | DangerHeuristic::DangerHeuristic(const Graph &g)
      |                  ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:4:40: warning: no header providing "Graph" is directly included [misc-include-cleaner]
    3 |
    4 | DangerHeuristic::DangerHeuristic(const Graph &g)
      |                                        ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:4:47: warning: parameter name 'g' is too short, expected at least 3 characters [readability-identifier-length]
    4 | DangerHeuristic::DangerHeuristic(const Graph &g)
      |                                               ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:5:17: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
    5 |     : graph(g), colorHistory(g.getVertexCount()),
      |                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:556:29: note: default parameter was declared here
  556 |       vector(size_type __n, const allocator_type& __a = allocator_type())
      |                             ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:6:7: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
    6 |       stableCount(g.getVertexCount()), dynamicDegree(g.getVertexCount()),
      |       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:556:29: note: default parameter was declared here
  556 |       vector(size_type __n, const allocator_type& __a = allocator_type())
      |                             ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:7:31: warning: 'operator()' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
    7 |       rng(std::random_device{}()) {}
      |                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/random.h:1781:5: note: resolves to this declaration
 1781 |     operator()()
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:9:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
    9 | double DangerHeuristic::calculateVertexDanger(const ColoringState &state,
      |                         ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:9:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    9 | double DangerHeuristic::calculateVertexDanger(const ColoringState &state,
      | ~~~~~~                  ^
      | auto
   10 |                                               int vertex) const {
      |                                                                 -> double
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:9:53: warning: no header providing "ColoringState" is directly included [misc-include-cleaner]
    3 |
    4 | DangerHeuristic::DangerHeuristic(const Graph &g)
    5 |     : graph(g), colorHistory(g.getVertexCount()),
    6 |       stableCount(g.getVertexCount()), dynamicDegree(g.getVertexCount()),
    7 |       rng(std::random_device{}()) {}
    8 |
    9 | double DangerHeuristic::calculateVertexDanger(const ColoringState &state,
      |                                                     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:12:5: warning: variable 'diffColored' of type 'double' can be declared 'const' [misc-const-correctness]
   12 |     double diffColored = getDifferentColoredNeighbors(state, vertex);
      |     ^
      |            const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:13:5: warning: variable 'maxColor' of type 'double' can be declared 'const' [misc-const-correctness]
   13 |     double maxColor = state.getMaxUsedColor() + 1;
      |     ^
      |            const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:14:5: warning: variable 'F' of type 'double' can be declared 'const' [misc-const-correctness]
   14 |     double F = params.C / pow(maxColor - diffColored, params.k);
      |     ^
      |            const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:14:12: warning: variable name 'F' is too short, expected at least 3 characters [readability-identifier-length]
   14 |     double F = params.C / pow(maxColor - diffColored, params.k);
      |            ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:14:27: warning: no header providing "pow" is directly included [misc-include-cleaner]
    3 |
    4 | DangerHeuristic::DangerHeuristic(const Graph &g)
    5 |     : graph(g), colorHistory(g.getVertexCount()),
    6 |       stableCount(g.getVertexCount()), dynamicDegree(g.getVertexCount()),
    7 |       rng(std::random_device{}()) {}
    8 |
    9 | double DangerHeuristic::calculateVertexDanger(const ColoringState &state,
   10 |                                               int vertex) const {
   11 |     // Base danger from original implementation
   12 |     double diffColored = getDifferentColoredNeighbors(state, vertex);
   13 |     double maxColor = state.getMaxUsedColor() + 1;
   14 |     double F = params.C / pow(maxColor - diffColored, params.k);
      |                           ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:17:5: warning: variable 'satDegree' of type 'double' can be declared 'const' [misc-const-correctness]
   17 |     double satDegree = calculateSaturationDegree(state, vertex);
      |     ^
      |            const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:18:5: warning: variable 'satFactor' of type 'double' can be declared 'const' [misc-const-correctness]
   18 |     double satFactor = params.kd * (satDegree / maxColor);
      |     ^
      |            const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:20:5: warning: variable 'neighborImpact' of type 'double' can be declared 'const' [misc-const-correctness]
   20 |     double neighborImpact = calculateNeighborImpact(state, vertex);
      |     ^
      |            const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:21:5: warning: variable 'stability' of type 'double' can be declared 'const' [misc-const-correctness]
   21 |     double stability = calculateStability(vertex);
      |     ^
      |            const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:22:5: warning: variable 'conflictPenalty' of type 'double' can be declared 'const' [misc-const-correctness]
   22 |     double conflictPenalty = calculateConflictPenalty(state, vertex);
      |     ^
      |            const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:29:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   29 | double DangerHeuristic::calculateSaturationDegree(const ColoringState &state,
      |                         ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:29:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   29 | double DangerHeuristic::calculateSaturationDegree(const ColoringState &state,
      | ~~~~~~                  ^
      | auto
   30 |                                                   int vertex) const {
      |                                                                     -> double
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:34:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   34 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:34:10: warning: variable 'neighbor' of type 'int' can be declared 'const' [misc-const-correctness]
   34 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |          ^
      |              const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:34:23: warning: 'operator!=<int *, std::vector<int>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   34 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1232:5: note: resolves to this declaration
 1232 |     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:34:23: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   34 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:34:23: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   34 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:35:9: warning: variable 'color' of type 'int' can be declared 'const' [misc-const-correctness]
   35 |         int color = state.getColor(neighbor);
      |         ^
      |             const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:37:40: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   37 |             if (usedColors.find(color) == usedColors.end()) {
      |                                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp:157:7: note: resolves to this declaration
  157 |       operator==(const PB_DS_TREE_CONST_IT_C_DEC & other) const
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:40:57: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   40 |                     1.0 / (dynamicDegree.effectiveDegree[neighbor] + 1);
      |                                                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:45:26: warning: narrowing conversion from 'size_type' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
   45 |     return totalWeight * usedColors.size();
      |                          ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:48:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   48 | double DangerHeuristic::calculateNeighborImpact(const ColoringState &state,
      |                         ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:48:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   48 | double DangerHeuristic::calculateNeighborImpact(const ColoringState &state,
      | ~~~~~~                  ^
      | auto
   49 |                                                 int vertex) const {
      |                                                                   -> double
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:52:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   52 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:52:10: warning: variable 'neighbor' of type 'int' can be declared 'const' [misc-const-correctness]
   52 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |          ^
      |              const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:52:23: warning: 'operator!=<int *, std::vector<int>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   52 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1232:5: note: resolves to this declaration
 1232 |     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:52:23: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   52 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:52:23: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   52 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:54:13: warning: variable 'availableColors' of type 'vector<int>' can be declared 'const' [misc-const-correctness]
   54 |             vector<int> availableColors = state.getAvailableColors(neighbor);
      |             ^
      |                         const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:54:13: warning: no header providing "std::vector" is directly included [misc-include-cleaner]
    3 |             vector<int> availableColors = state.getAvailableColors(neighbor);
      |             ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:56:23: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
   56 |                 1.0 - (double)availableColors.size() / state.getNumColors();
      |                       ^~~~~~~~
      |                       static_cast<double>(          )
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:63:22: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   63 | int DangerHeuristic::selectNextVertex(const ColoringState &state) const {
      |                      ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:63:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   63 | int DangerHeuristic::selectNextVertex(const ColoringState &state) const {
      | ~~~                  ^
      | auto                                                                    -> int
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:67:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   67 |     for (int v = 0; v < graph.getVertexCount(); v++) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:67:14: warning: loop variable name 'v' is too short, expected at least 2 characters [readability-identifier-length]
   67 |     for (int v = 0; v < graph.getVertexCount(); v++) {
      |              ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:69:13: warning: variable 'danger' of type 'double' can be declared 'const' [misc-const-correctness]
   69 |             double danger = calculateVertexDanger(state, v);
      |             ^
      |                    const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:74:29: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
   74 |     if (vertexQueue.empty())
      |                             ^
      |                              {
   75 |         return -1;
      |
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:78:5: warning: variable 'k' of type 'int' can be declared 'const' [misc-const-correctness]
   78 |     int k = std::min(3, (int)vertexQueue.size());
      |     ^
      |         const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:78:9: warning: variable name 'k' is too short, expected at least 3 characters [readability-identifier-length]
   78 |     int k = std::min(3, (int)vertexQueue.size());
      |         ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:78:13: warning: 'min<int>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   78 |     int k = std::min(3, (int)vertexQueue.size());
      |             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_algobase.h:233:5: note: resolves to this declaration
  233 |     min(const _Tp& __a, const _Tp& __b)
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:78:18: warning: no header providing "std::min" is directly included [misc-include-cleaner]
    3 |     int k = std::min(3, (int)vertexQueue.size());
      |                  ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:78:25: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
   78 |     int k = std::min(3, (int)vertexQueue.size());
      |                         ^~~~~
      |                         static_cast<int>(      )
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:79:12: warning: no header providing "std::pair" is directly included [misc-include-cleaner]
    3 |     vector<pair<int, double>> candidates;
      |            ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:81:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   81 |     for (int i = 0; i < k; i++) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:81:21: warning: backward branch (for loop) is ID-dependent due to variable reference to 'k' and may cause performance degradation [altera-id-dependent-backward-branch]
   81 |     for (int i = 0; i < k; i++) {
      |                     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:78:5: note: inferred assignment of ID-dependent value from ID-dependent
   78 |     int k = std::min(3, (int)vertexQueue.size());
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:82:14: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
   82 |         auto it = vertexQueue.find_by_order(vertexQueue.size() - 1 - i);
      |              ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:83:20: warning: use emplace_back instead of push_back [hicpp-use-emplace,modernize-use-emplace]
   83 |         candidates.push_back({it->second, it->first});
      |                    ^~~~~~~~~~~                     ~
      |                    emplace_back(
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:83:33: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   83 |         candidates.push_back({it->second, it->first});
      |                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp:143:7: note: resolves to this declaration
  143 |       operator->() const
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:83:45: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   83 |         candidates.push_back({it->second, it->first});
      |                                             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp:143:7: note: resolves to this declaration
  143 |       operator->() const
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:89:22: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   89 | int DangerHeuristic::selectColor(const ColoringState &state, int vertex) const {
      |                      ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:89:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   89 | int DangerHeuristic::selectColor(const ColoringState &state, int vertex) const {
      | ~~~                  ^
      | auto                                                                           -> int
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:91:5: warning: variable 'availableColors' of type 'vector<int>' can be declared 'const' [misc-const-correctness]
   91 |     vector<int> availableColors = state.getAvailableColors(vertex);
      |     ^
      |                 const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:93:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   93 |     for (int color : availableColors) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:93:10: warning: variable 'color' of type 'int' can be declared 'const' [misc-const-correctness]
   93 |     for (int color : availableColors) {
      |          ^
      |              const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:93:20: warning: 'operator!=<int *, std::vector<int>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   93 |     for (int color : availableColors) {
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1232:5: note: resolves to this declaration
 1232 |     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:93:20: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   93 |     for (int color : availableColors) {
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:93:20: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   93 |     for (int color : availableColors) {
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:94:9: warning: variable 'colorDanger' of type 'double' can be declared 'const' [misc-const-correctness]
   94 |         double colorDanger = calculateColorDanger(state, vertex, color);
      |         ^
      |                const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:99:5: warning: 'sort<__gnu_cxx::__normal_iterator<std::pair<int, double> *, std::vector<std::pair<int, double>>>, (lambda at /home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:100:10)>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   99 |     sort(colorDangers.begin(), colorDangers.end(),
      |     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_algo.h:4792:5: note: resolves to this declaration
 4792 |     sort(_RandomAccessIterator __first, _RandomAccessIterator __last,
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:99:5: warning: no header providing "std::sort" is directly included [misc-include-cleaner]
   99 |     sort(colorDangers.begin(), colorDangers.end(),
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:100:25: warning: parameter name 'a' is too short, expected at least 3 characters [readability-identifier-length]
  100 |          [](const auto &a, const auto &b) { return a.second < b.second; });
      |                         ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:100:40: warning: parameter name 'b' is too short, expected at least 3 characters [readability-identifier-length]
  100 |          [](const auto &a, const auto &b) { return a.second < b.second; });
      |                                        ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:106:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  106 |     for (size_t i = 0; i < std::min(size_t(3), colorDangers.size()); i++) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:106:10: warning: no header providing "size_t" is directly included [misc-include-cleaner]
    3 |     for (size_t i = 0; i < std::min(size_t(3), colorDangers.size()); i++) {
      |          ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:106:28: warning: 'min<unsigned long>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  106 |     for (size_t i = 0; i < std::min(size_t(3), colorDangers.size()); i++) {
      |                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_algobase.h:233:5: note: resolves to this declaration
  233 |     min(const _Tp& __a, const _Tp& __b)
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:106:37: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
  106 |     for (size_t i = 0; i < std::min(size_t(3), colorDangers.size()); i++) {
      |                                     ^~~~~~
      |                                     static_cast<size_t>
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:107:9: warning: variable 'weight' of type 'double' can be declared 'const' [misc-const-correctness]
  107 |         double weight = 1.0 / (colorDangers[i].second + 1);
      |         ^
      |                const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:107:44: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  107 |         double weight = 1.0 / (colorDangers[i].second + 1);
      |                                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1128:7: note: resolves to this declaration
 1128 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:113:5: warning: variable 'r' of type 'double' can be declared 'const' [misc-const-correctness]
  113 |     double r = std::uniform_real_distribution<>(0, totalWeight)(rng);
      |     ^
      |            const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:113:12: warning: variable name 'r' is too short, expected at least 3 characters [readability-identifier-length]
  113 |     double r = std::uniform_real_distribution<>(0, totalWeight)(rng);
      |            ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:113:21: warning: no header providing "std::uniform_real_distribution" is directly included [misc-include-cleaner]
    3 |     double r = std::uniform_real_distribution<>(0, totalWeight)(rng);
      |                     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:113:64: warning: 'operator()<std::mersenne_twister_engine<unsigned long, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  113 |     double r = std::uniform_real_distribution<>(0, totalWeight)(rng);
      |                                                                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/random.h:2001:2: note: resolves to this declaration
 2001 |         operator()(_UniformRandomNumberGenerator& __urng)
      |         ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:116:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  116 |     for (size_t i = 0; i < weights.size(); i++) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:117:25: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  117 |         accum += weights[i];
      |                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1128:7: note: resolves to this declaration
 1128 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:120:25: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  120 |             colorHistory[vertex].insert(colorDangers[i].first);
      |                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1128:7: note: resolves to this declaration
 1128 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:120:53: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  120 |             colorHistory[vertex].insert(colorDangers[i].first);
      |                                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1128:7: note: resolves to this declaration
 1128 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:121:32: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  121 |             return colorDangers[i].first;
      |                                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1128:7: note: resolves to this declaration
 1128 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:125:24: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  125 |     return colorDangers[0].first;
      |                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1128:7: note: resolves to this declaration
 1128 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:128:23: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  128 | void DangerHeuristic::updateParameters(
      |                       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:129:35: warning: missing username/bug in TODO [google-readability-todo]
  129 |     const ColoringState &state) { // TODO: NO SE UTILIZA MODIFICAR PARA QUE SI
      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                   // TODO(solar): NO SE UTILIZA MODIFICAR PARA QUE SI
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:130:5: warning: variable 'progressRatio' of type 'double' can be declared 'const' [misc-const-correctness]
  130 |     double progressRatio =
      |     ^
      |            const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:131:9: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
  131 |         (double)state.getNumColors() / graph.getVertexCount();
      |         ^~~~~~~~
      |         static_cast<double>(        )
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:133:25: warning: 0.2 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  133 |     if (progressRatio < 0.2) {
      |                         ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:134:21: warning: 1.1 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  134 |         params.k *= 1.1;
      |                     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:135:22: warning: 0.9 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  135 |         params.ku *= 0.9;
      |                      ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:137:21: warning: 0.9 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  137 |         params.k *= 0.9;
      |                     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:138:22: warning: 1.1 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  138 |         params.ku *= 1.1;
      |                      ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:142:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  142 |     for (int v = 0; v < graph.getVertexCount(); v++) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:142:14: warning: loop variable name 'v' is too short, expected at least 2 characters [readability-identifier-length]
  142 |     for (int v = 0; v < graph.getVertexCount(); v++) {
      |              ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:144:24: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  144 |             stableCount[v]++;
      |                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1128:7: note: resolves to this declaration
 1128 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:146:24: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  146 |             stableCount[v] = 0;
      |                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1128:7: note: resolves to this declaration
 1128 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:152:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  152 | double DangerHeuristic::calculateStability(int vertex) const {
      |                         ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:152:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  152 | double DangerHeuristic::calculateStability(int vertex) const {
      | ~~~~~~                  ^
      | auto                                                         -> double
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:153:30: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  153 |     return 1.0 / (stableCount[vertex] + 1);
      |                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1128:7: note: resolves to this declaration
 1128 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:156:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  156 | double DangerHeuristic::calculateConflictPenalty(const ColoringState &state,
      |                         ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:156:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  156 | double DangerHeuristic::calculateConflictPenalty(const ColoringState &state,
      | ~~~~~~                  ^
      | auto
  157 |                                                  int vertex) const {
      |                                                                    -> double
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:159:5: warning: variable 'color' of type 'int' can be declared 'const' [misc-const-correctness]
  159 |     int color = state.getColor(vertex);
      |     ^
      |         const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:161:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  161 |         for (int neighbor : graph.getNeighbors(vertex)) {
      |         ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:161:14: warning: variable 'neighbor' of type 'int' can be declared 'const' [misc-const-correctness]
  161 |         for (int neighbor : graph.getNeighbors(vertex)) {
      |              ^
      |                  const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:161:27: warning: 'operator!=<int *, std::vector<int>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  161 |         for (int neighbor : graph.getNeighbors(vertex)) {
      |                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1232:5: note: resolves to this declaration
 1232 |     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:161:27: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  161 |         for (int neighbor : graph.getNeighbors(vertex)) {
      |                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:161:27: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  161 |         for (int neighbor : graph.getNeighbors(vertex)) {
      |                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:167:24: warning: 0.5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  167 |     return conflicts * 0.5; // Factor de penalizacion
      |                        ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:170:23: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  170 | bool DangerHeuristic::stagnationDetected()
      |                       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:170:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  170 | bool DangerHeuristic::stagnationDetected()
      | ~~~~                  ^
      | auto
  171 |     const { // TODO: NO SE UTILIZA PERO QUIZA CAMBIAR PARA QUE SI SE USE
      |           -> bool
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:171:13: warning: missing username/bug in TODO [google-readability-todo]
  171 |     const { // TODO: NO SE UTILIZA PERO QUIZA CAMBIAR PARA QUE SI SE USE
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |             // TODO(solar): NO SE UTILIZA PERO QUIZA CAMBIAR PARA QUE SI SE USE
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:174:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  174 |     for (int count : stableCount) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:174:10: warning: variable 'count' of type 'int' can be declared 'const' [misc-const-correctness]
  174 |     for (int count : stableCount) {
      |          ^
      |              const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:174:20: warning: 'operator!=<int *, std::vector<int>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  174 |     for (int count : stableCount) {
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1232:5: note: resolves to this declaration
 1232 |     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:174:20: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  174 |     for (int count : stableCount) {
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:174:20: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  174 |     for (int count : stableCount) {
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:175:21: warning: 10 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  175 |         if (count > 10)
      |                     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:175:24: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  175 |         if (count > 10)
      |                        ^
      |                         {
  176 |             stagnatedVertices++;
      |
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:180:32: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  180 | ColoringState DangerHeuristic::generateInitialColoring(int maxColors) {
      |                                ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:180:32: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  180 | ColoringState DangerHeuristic::generateInitialColoring(int maxColors) {
      | ~~~~~~~~~~~~~                  ^
      | auto                                                                  -> ColoringState
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:184:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  184 |     while (!state.isComplete()) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:184:12: warning: backward branch (while loop) is ID-dependent due to variable reference to 'state' and may cause performance degradation [altera-id-dependent-backward-branch]
  184 |     while (!state.isComplete()) {
      |            ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:181:5: note: inferred assignment of ID-dependent value from ID-dependent
  181 |     ColoringState state(graph, maxColors);
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:185:9: warning: variable 'vertex' of type 'int' can be declared 'const' [misc-const-correctness]
  185 |         int vertex = selectNextVertex(state);
      |         ^
      |             const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:186:26: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  186 |         if (vertex == -1)
      |                          ^
      |                           {
  187 |             break; // No hay mas vertices para colorear
      |
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:189:9: warning: variable 'color' of type 'int' can be declared 'const' [misc-const-correctness]
  189 |         int color = selectColor(state, vertex);
      |         ^
      |             const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:195:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  195 | double DangerHeuristic::calculateColorDanger(const ColoringState &state,
      |                         ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:195:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  195 | double DangerHeuristic::calculateColorDanger(const ColoringState &state,
      | ~~~~~~                  ^
      | auto
  196 |                                              int vertex, int color) const {
      |                                                                           -> double
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:196:46: warning: 2 adjacent parameters of 'calculateColorDanger' of similar type ('int') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  196 |                                              int vertex, int color) const {
      |                                              ^~~~~~~~~~~~~~~~~~~~~
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:196:50: note: the first parameter in the range is 'vertex'
  196 |                                              int vertex, int color) const {
      |                                                  ^~~~~~
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:196:62: note: the last parameter in the range is 'color'
  196 |                                              int vertex, int color) const {
      |                                                              ^~~~~
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:199:9: warning: variable name 'nc' is too short, expected at least 3 characters [readability-identifier-length]
  199 |     int nc = 0; // vertice con maximo diffNeighbors
      |         ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:201:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  201 |     for (int v : graph.getNeighbors(vertex)) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:201:10: warning: variable 'v' of type 'int' can be declared 'const' [misc-const-correctness]
  201 |     for (int v : graph.getNeighbors(vertex)) {
      |          ^
      |              const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:201:14: warning: variable name 'v' is too short, expected at least 3 characters [readability-identifier-length]
  201 |     for (int v : graph.getNeighbors(vertex)) {
      |              ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:201:16: warning: 'operator!=<int *, std::vector<int>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  201 |     for (int v : graph.getNeighbors(vertex)) {
      |                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1232:5: note: resolves to this declaration
 1232 |     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:201:16: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  201 |     for (int v : graph.getNeighbors(vertex)) {
      |                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:201:16: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  201 |     for (int v : graph.getNeighbors(vertex)) {
      |                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:203:13: warning: variable 'diffNeighbors' of type 'int' can be declared 'const' [misc-const-correctness]
  203 |             int diffNeighbors = getDifferentColoredNeighbors(state, v);
      |             ^
      |                 const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:212:5: warning: variable 'maxColor' of type 'double' can be declared 'const' [misc-const-correctness]
  212 |     double maxColor = state.getMaxUsedColor() + 1;
      |     ^
      |            const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:213:5: warning: variable 'diffNeighborsTerm' of type 'double' can be declared 'const' [misc-const-correctness]
  213 |     double diffNeighborsTerm =
      |     ^
      |            const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:215:5: warning: variable 'uncoloredTerm' of type 'double' can be declared 'const' [misc-const-correctness]
  215 |     double uncoloredTerm = params.k3 * getUncoloredNeighbors(state, nc);
      |     ^
      |            const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:216:5: warning: variable 'frequencyTerm' of type 'double' can be declared 'const' [misc-const-correctness]
  216 |     double frequencyTerm = params.k4 * state.getVerticesWithColor(color).size();
      |     ^
      |            const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:216:40: warning: narrowing conversion from 'size_type' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  216 |     double frequencyTerm = params.k4 * state.getVerticesWithColor(color).size();
      |                                        ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:220:22: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  220 | int DangerHeuristic::getDifferentColoredNeighbors(const ColoringState &state,
      |                      ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:220:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  220 | int DangerHeuristic::getDifferentColoredNeighbors(const ColoringState &state,
      | ~~~                  ^
      | auto
  221 |                                                   int vertex) const {
      |                                                                     -> int
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:222:5: warning: no header providing "std::vector" is directly included [misc-include-cleaner]
  222 |     vector<bool> usedColors(state.getMaxUsedColor() + 1, false);
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:222:18: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  222 |     vector<bool> usedColors(state.getMaxUsedColor() + 1, false);
      |                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_bvector.h:796:7: note: default parameter was declared here
  796 |              const allocator_type& __a = allocator_type())
      |              ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:225:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  225 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:225:10: warning: variable 'neighbor' of type 'int' can be declared 'const' [misc-const-correctness]
  225 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |          ^
      |              const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:225:23: warning: 'operator!=<int *, std::vector<int>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  225 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1232:5: note: resolves to this declaration
 1232 |     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:225:23: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  225 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:225:23: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  225 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:226:9: warning: variable 'color' of type 'int' can be declared 'const' [misc-const-correctness]
  226 |         int color = state.getColor(neighbor);
      |         ^
      |             const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:227:39: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  227 |         if (color != -1 && !usedColors[color]) {
      |                                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_bvector.h:1086:7: note: resolves to this declaration
 1086 |       operator[](size_type __n)
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:228:23: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  228 |             usedColors[color] = true;
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_bvector.h:1086:7: note: resolves to this declaration
 1086 |       operator[](size_type __n)
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:228:31: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  228 |             usedColors[color] = true;
      |                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_bvector.h:104:5: note: resolves to this declaration
  104 |     operator=(bool __x) _GLIBCXX_NOEXCEPT
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:235:22: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  235 | int DangerHeuristic::getUncoloredNeighbors(const ColoringState &state,
      |                      ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:235:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  235 | int DangerHeuristic::getUncoloredNeighbors(const ColoringState &state,
      | ~~~                  ^
      | auto
  236 |                                            int vertex) const {
      |                                                              -> int
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:238:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  238 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:238:10: warning: variable 'neighbor' of type 'int' can be declared 'const' [misc-const-correctness]
  238 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |          ^
      |              const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:238:23: warning: 'operator!=<int *, std::vector<int>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  238 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1232:5: note: resolves to this declaration
 1232 |     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:238:23: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  238 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:238:23: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  238 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:245:25: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  245 | double DangerHeuristic::getColorShareRatio(const ColoringState &state,
      |                         ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:245:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  245 | double DangerHeuristic::getColorShareRatio(const ColoringState &state,
      | ~~~~~~                  ^
      | auto
  246 |                                            int vertex) const {
      |                                                              -> double
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:249:18: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  249 |     vector<bool> colorAvailable(state.getMaxUsedColor() + 1, true);
      |                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_bvector.h:796:7: note: default parameter was declared here
  796 |              const allocator_type& __a = allocator_type())
      |              ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:252:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  252 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:252:10: warning: variable 'neighbor' of type 'int' can be declared 'const' [misc-const-correctness]
  252 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |          ^
      |              const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:252:23: warning: 'operator!=<int *, std::vector<int>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  252 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1232:5: note: resolves to this declaration
 1232 |     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:252:23: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  252 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:252:23: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  252 |     for (int neighbor : graph.getNeighbors(vertex)) {
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:253:9: warning: variable 'color' of type 'int' can be declared 'const' [misc-const-correctness]
  253 |         int color = state.getColor(neighbor);
      |         ^
      |             const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:255:27: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  255 |             colorAvailable[color] = false;
      |                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_bvector.h:1086:7: note: resolves to this declaration
 1086 |       operator[](size_type __n)
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:255:35: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  255 |             colorAvailable[color] = false;
      |                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_bvector.h:104:5: note: resolves to this declaration
  104 |     operator=(bool __x) _GLIBCXX_NOEXCEPT
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:260:17: warning: loop variable name 'c' is too short, expected at least 2 characters [readability-identifier-length]
  260 |     for (size_t c = 0; c < colorAvailable.size(); c++) {
      |                 ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:260:24: warning: backward branch (for loop) is ID-dependent due to variable reference to 'colorAvailable' and may cause performance degradation [altera-id-dependent-backward-branch]
  260 |     for (size_t c = 0; c < colorAvailable.size(); c++) {
      |                        ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:249:5: note: inferred assignment of ID-dependent value from ID-dependent
  249 |     vector<bool> colorAvailable(state.getMaxUsedColor() + 1, true);
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:261:27: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  261 |         if (colorAvailable[c]) {
      |                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_bvector.h:1086:7: note: resolves to this declaration
 1086 |       operator[](size_type __n)
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:266:13: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  266 |             for (int neighbor : graph.getNeighbors(vertex)) {
      |             ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:266:18: warning: variable 'neighbor' of type 'int' can be declared 'const' [misc-const-correctness]
  266 |             for (int neighbor : graph.getNeighbors(vertex)) {
      |                  ^
      |                      const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:266:31: warning: 'operator!=<int *, std::vector<int>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  266 |             for (int neighbor : graph.getNeighbors(vertex)) {
      |                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1232:5: note: resolves to this declaration
 1232 |     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:266:31: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  266 |             for (int neighbor : graph.getNeighbors(vertex)) {
      |                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:266:31: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  266 |             for (int neighbor : graph.getNeighbors(vertex)) {
      |                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:268:55: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  268 |                     state.isValidAssignment(neighbor, c)) {
      |                                                       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:273:24: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  273 |             if (shared)
      |                        ^
      |                         {
  274 |                 sharedColors++;
      |
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:282:22: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  282 | int DangerHeuristic::selectRandomFromTop(
      |                      ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:282:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  282 | int DangerHeuristic::selectRandomFromTop(
      | ~~~                  ^
      | auto
  283 |     const vector<pair<int, double>> &scores, int topK) const {
      |                                                              -> int
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:284:5: warning: variable 'size' of type 'int' can be declared 'const' [misc-const-correctness]
  284 |     int size = min(topK, (int)scores.size());
      |     ^
      |         const
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:284:16: warning: 'min<int>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  284 |     int size = min(topK, (int)scores.size());
      |                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_algobase.h:233:5: note: resolves to this declaration
  233 |     min(const _Tp& __a, const _Tp& __b)
      |     ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:284:26: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
  284 |     int size = min(topK, (int)scores.size());
      |                          ^~~~~
      |                          static_cast<int>( )
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:285:10: warning: no header providing "std::uniform_int_distribution" is directly included [misc-include-cleaner]
  285 |     std::uniform_int_distribution<> dist(0, size - 1);
      |          ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:286:18: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  286 |     return scores[dist(rng)].first;
      |                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/DangerHeuristic.cpp:286:23: warning: 'operator()<std::mersenne_twister_engine<unsigned long, 32, 624, 397, 31, 2567483615, 11, 4294967295, 7, 2636928640, 15, 4022730752, 18, 1812433253>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  286 |     return scores[dist(rng)].first;
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/uniform_int_dist.h:203:2: note: resolves to this declaration
  203 |         operator()(_UniformRandomBitGenerator& __urng)
      |         ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:3:8: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
    3 | Graph::Graph() {
      |        ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:4:5: warning: 'vertexCount' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
    4 |     this->vertexCount = 0;
      |     ^~~~~~~~~~~~~~~~~~~~~~
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:5:5: warning: 'edgeCount' should be initialized in an in-class default member initializer [cppcoreguidelines-prefer-member-initializer]
    5 |     this->edgeCount = 0;
      |     ^~~~~~~~~~~~~~~~~~~~
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:7:8: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
    7 | Graph::Graph(int vertices) {
      |        ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:8:5: warning: 'vertexCount' should be initialized in a member initializer of the constructor [cppcoreguidelines-prefer-member-initializer]
    7 | Graph::Graph(int vertices) {
      |                            : vertexCount(vertices)
    8 |     this->vertexCount = vertices;
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:9:15: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
    9 |     this->adj = vector<AdjList>(vertices);
      |               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:766:7: note: resolves to this declaration
  766 |       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
      |       ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:9:17: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
    9 |     this->adj = vector<AdjList>(vertices);
      |                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:556:29: note: default parameter was declared here
  556 |       vector(size_type __n, const allocator_type& __a = allocator_type())
      |                             ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:9:17: warning: no header providing "std::vector" is directly included [misc-include-cleaner]
    2 |
    3 | Graph::Graph() {
    4 |     this->vertexCount = 0;
    5 |     this->edgeCount = 0;
    6 | }
    7 | Graph::Graph(int vertices) {
    8 |     this->vertexCount = vertices;
    9 |     this->adj = vector<AdjList>(vertices);
      |                 ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:10:5: warning: 'edgeCount' should be initialized in a member initializer of the constructor [cppcoreguidelines-prefer-member-initializer]
    7 | Graph::Graph(int vertices) {
      |                           , edgeCount(0)
    8 |     this->vertexCount = vertices;
    9 |     this->adj = vector<AdjList>(vertices);
   10 |     this->edgeCount = 0;
      |     ^~~~~~~~~~~~~~~~~~~~
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:13:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   13 | void Graph::addEdge(int v, int w) {
      |             ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:13:25: warning: parameter name 'v' is too short, expected at least 3 characters [readability-identifier-length]
   13 | void Graph::addEdge(int v, int w) {
      |                         ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:13:32: warning: parameter name 'w' is too short, expected at least 3 characters [readability-identifier-length]
   13 | void Graph::addEdge(int v, int w) {
      |                                ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:15:12: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   15 |         adj[v].insert(w);
      |            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1128:7: note: resolves to this declaration
 1128 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:20:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   20 | bool Graph::hasEdge(int v, int w) const {
      |             ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:20:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   20 | bool Graph::hasEdge(int v, int w) const {
      | ~~~~        ^
      | auto                                    -> bool
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:20:25: warning: parameter name 'v' is too short, expected at least 3 characters [readability-identifier-length]
   20 | bool Graph::hasEdge(int v, int w) const {
      |                         ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:20:32: warning: parameter name 'w' is too short, expected at least 3 characters [readability-identifier-length]
   20 | bool Graph::hasEdge(int v, int w) const {
      |                                ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:21:15: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   21 |     return adj[v].find(w) != adj[v].end();
      |               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:21:27: warning: 'operator!=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   21 |     return adj[v].find(w) != adj[v].end();
      |                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp:127:3: note: resolves to this declaration
  127 |   operator!=(const point_const_iterator_& other) const
      |   ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:21:33: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   21 |     return adj[v].find(w) != adj[v].end();
      |                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:24:20: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   24 | vector<int> Graph::getNeighbors(int v) const {
      |                    ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:24:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   24 | vector<int> Graph::getNeighbors(int v) const {
      | ~~~~~~~~~~~        ^
      | auto                                         -> vector<int>
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:24:37: warning: parameter name 'v' is too short, expected at least 3 characters [readability-identifier-length]
   24 | vector<int> Graph::getNeighbors(int v) const {
      |                                     ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:26:26: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   26 |     neighbors.reserve(adj[v].size()); // Preallocate para eficiencia
      |                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:27:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   27 |     for (const auto &w : adj[v]) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:27:22: warning: variable name 'w' is too short, expected at least 3 characters [readability-identifier-length]
   27 |     for (const auto &w : adj[v]) {
      |                      ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:27:24: warning: 'operator!=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   27 |     for (const auto &w : adj[v]) {
      |                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp:127:3: note: resolves to this declaration
  127 |   operator!=(const point_const_iterator_& other) const
      |   ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:27:24: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   27 |     for (const auto &w : adj[v]) {
      |                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp:104:3: note: resolves to this declaration
  104 |   operator*() const
      |   ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:27:24: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   27 |     for (const auto &w : adj[v]) {
      |                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ext/pb_ds/detail/unordered_iterator/const_iterator.hpp:78:3: note: resolves to this declaration
   78 |   operator++()
      |   ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:27:29: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   27 |     for (const auto &w : adj[v]) {
      |                             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:33:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   33 | void Graph::removeEdge(int v, int w) { // TODO: NO SE UTILIZA
      |             ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:33:28: warning: parameter name 'v' is too short, expected at least 3 characters [readability-identifier-length]
   33 | void Graph::removeEdge(int v, int w) { // TODO: NO SE UTILIZA
      |                            ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:33:35: warning: parameter name 'w' is too short, expected at least 3 characters [readability-identifier-length]
   33 | void Graph::removeEdge(int v, int w) { // TODO: NO SE UTILIZA
      |                                   ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:33:40: warning: missing username/bug in TODO [google-readability-todo]
   33 | void Graph::removeEdge(int v, int w) { // TODO: NO SE UTILIZA
      |                                        ^~~~~~~~~~~~~~~~~~~~~~
      |                                        // TODO(solar): NO SE UTILIZA
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:35:12: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   35 |         adj[v].erase(w);
      |            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1128:7: note: resolves to this declaration
 1128 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:40:12: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   40 | int Graph::getVertexCount() const { return vertexCount; }
      |            ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:40:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   40 | int Graph::getVertexCount() const { return vertexCount; }
      | ~~~        ^
      | auto                              -> int
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:42:12: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   42 | int Graph::getDegree(int v) const { return adj[v].size(); }
      |            ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:42:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   42 | int Graph::getDegree(int v) const { return adj[v].size(); }
      | ~~~        ^
      | auto                              -> int
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:42:26: warning: parameter name 'v' is too short, expected at least 3 characters [readability-identifier-length]
   42 | int Graph::getDegree(int v) const { return adj[v].size(); }
      |                          ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:42:44: warning: narrowing conversion from 'size_type' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
   42 | int Graph::getDegree(int v) const { return adj[v].size(); }
      |                                            ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:42:47: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   42 | int Graph::getDegree(int v) const { return adj[v].size(); }
      |                                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:44:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   44 | bool Graph::isEmpty() const { return edgeCount == 0; }
      |             ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:44:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   44 | bool Graph::isEmpty() const { return edgeCount == 0; }
      | ~~~~        ^
      | auto                        -> bool
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:46:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   46 | void Graph::clear() { // TODO: NO SE UTILIZA
      |             ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:46:23: warning: missing username/bug in TODO [google-readability-todo]
   46 | void Graph::clear() { // TODO: NO SE UTILIZA
      |                       ^~~~~~~~~~~~~~~~~~~~~~
      |                       // TODO(solar): NO SE UTILIZA
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:47:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   47 |     for (auto &adjList : adj) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:47:24: warning: 'operator!=<__gnu_pbds::cc_hash_table<int, __gnu_pbds::null_type, std::hash<int>> *, std::vector<__gnu_pbds::cc_hash_table<int, __gnu_pbds::null_type, std::hash<int>>>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   47 |     for (auto &adjList : adj) {
      |                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1232:5: note: resolves to this declaration
 1232 |     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:47:24: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   47 |     for (auto &adjList : adj) {
      |                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:47:24: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   47 |     for (auto &adjList : adj) {
      |                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:53:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   53 | bool Graph::createFromFile(const string &fileName) {
      |             ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:53:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   53 | bool Graph::createFromFile(const string &fileName) {
      | ~~~~        ^
      | auto                                               -> bool
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:53:34: warning: no header providing "std::string" is directly included [misc-include-cleaner]
    2 | bool Graph::createFromFile(const string &fileName) {
      |                                  ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:54:5: warning: no header providing "std::ifstream" is directly included [misc-include-cleaner]
    2 |     ifstream file(fileName);
      |     ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:54:14: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   54 |     ifstream file(fileName);
      |              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/fstream:603:8: note: default parameter was declared here
  603 |                      ios_base::openmode __mode = ios_base::in)
      |                      ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:56:9: warning: no header providing "std::cout" is directly included [misc-include-cleaner]
    2 |         cout << "No se pudo abrir el archivo " << fileName << endl;
      |         ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:56:14: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   56 |         cout << "No se pudo abrir el archivo " << fileName << endl;
      |              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:56:48: warning: 'operator<<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   56 |         cout << "No se pudo abrir el archivo " << fileName << endl;
      |                                                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4077:5: note: resolves to this declaration
 4077 |     operator<<(basic_ostream<_CharT, _Traits>& __os,
      |     ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:56:60: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   56 |         cout << "No se pudo abrir el archivo " << fileName << endl;
      |                                                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:56:63: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   56 |         cout << "No se pudo abrir el archivo " << fileName << endl;
      |                                                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:56:63: warning: no header providing "std::endl" is directly included [misc-include-cleaner]
    2 |         cout << "No se pudo abrir el archivo " << fileName << endl;
      |                                                               ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:56:63: warning: do not use 'endl' with streams; use '\n' instead [performance-avoid-endl]
   56 |         cout << "No se pudo abrir el archivo " << fileName << endl;
      |                                                               ^~~~
      |                                                               '\n'
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:60:5: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
   60 |     int v, w;
      |     ^~~~~~~~~
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:60:9: warning: variable 'v' is not initialized [cppcoreguidelines-init-variables]
   60 |     int v, w;
      |         ^
note: this fix will not be applied because it overlaps with another fix
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:60:9: warning: variable name 'v' is too short, expected at least 3 characters [readability-identifier-length]
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:60:12: warning: variable 'w' is not initialized [cppcoreguidelines-init-variables]
   60 |     int v, w;
      |            ^
note: this fix will not be applied because it overlaps with another fix
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:60:12: warning: variable name 'w' is too short, expected at least 3 characters [readability-identifier-length]
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:61:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   61 |     while (file >> v >> w) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:61:12: warning: backward branch (while loop) is ID-dependent due to variable reference to 'file' and may cause performance degradation [altera-id-dependent-backward-branch]
   61 |     while (file >> v >> w) {
      |            ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:54:5: note: inferred assignment of ID-dependent value from ID-dependent
   54 |     ifstream file(fileName);
      |     ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:61:17: warning: 'operator>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   61 |     while (file >> v >> w) {
      |                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/istream:181:7: note: resolves to this declaration
  181 |       operator>>(int& __n);
      |       ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:61:22: warning: 'operator>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   61 |     while (file >> v >> w) {
      |                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/istream:181:7: note: resolves to this declaration
  181 |       operator>>(int& __n);
      |       ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:62:15: warning: use emplace_back instead of push_back [hicpp-use-emplace,modernize-use-emplace]
   62 |         edges.push_back({v, w});
      |               ^~~~~~~~~~~    ~
      |               emplace_back(
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:65:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   65 |     for (const auto &edge : edges) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:65:27: warning: 'operator!=<std::pair<int, int> *, std::vector<std::pair<int, int>>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   65 |     for (const auto &edge : edges) {
      |                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1232:5: note: resolves to this declaration
 1232 |     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:65:27: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   65 |     for (const auto &edge : edges) {
      |                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:65:27: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   65 |     for (const auto &edge : edges) {
      |                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:66:21: warning: 'max<int>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   66 |         maxVertex = std::max(maxVertex, std::max(edge.first, edge.second));
      |                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_algobase.h:257:5: note: resolves to this declaration
  257 |     max(const _Tp& __a, const _Tp& __b)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:66:26: warning: no header providing "std::max" is directly included [misc-include-cleaner]
    2 |         maxVertex = std::max(maxVertex, std::max(edge.first, edge.second));
      |                          ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:66:41: warning: 'max<int>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   66 |         maxVertex = std::max(maxVertex, std::max(edge.first, edge.second));
      |                                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_algobase.h:257:5: note: resolves to this declaration
  257 |     max(const _Tp& __a, const _Tp& __b)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:69:15: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   69 |     this->adj = vector<AdjList>(maxVertex);
      |               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:766:7: note: resolves to this declaration
  766 |       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
      |       ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:69:17: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   69 |     this->adj = vector<AdjList>(maxVertex);
      |                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:556:29: note: default parameter was declared here
  556 |       vector(size_type __n, const allocator_type& __a = allocator_type())
      |                             ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:72:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   72 |     for (const auto &edge : edges) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:72:27: warning: 'operator!=<std::pair<int, int> *, std::vector<std::pair<int, int>>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   72 |     for (const auto &edge : edges) {
      |                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1232:5: note: resolves to this declaration
 1232 |     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:72:27: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   72 |     for (const auto &edge : edges) {
      |                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:72:27: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   72 |     for (const auto &edge : edges) {
      |                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:77:15: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   77 |     std::cout << "total de aristas: " << edges.size() << std::endl;
      |               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:77:39: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   77 |     std::cout << "total de aristas: " << edges.size() << std::endl;
      |                                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:178:7: note: resolves to this declaration
  178 |       operator<<(unsigned long __n)
      |       ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:77:55: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   77 |     std::cout << "total de aristas: " << edges.size() << std::endl;
      |                                                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:77:58: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   77 |     std::cout << "total de aristas: " << edges.size() << std::endl;
      |                                                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:77:58: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   77 |     std::cout << "total de aristas: " << edges.size() << std::endl;
      |                                                          ^~~~~~~~~
      |                                                          '\n'
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:78:15: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   78 |     std::cout << "total de vertices: " << maxVertex << std::endl;
      |               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:78:40: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   78 |     std::cout << "total de vertices: " << maxVertex << std::endl;
      |                                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:197:7: note: resolves to this declaration
  197 |       operator<<(int __n);
      |       ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:78:53: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   78 |     std::cout << "total de vertices: " << maxVertex << std::endl;
      |                                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:78:56: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   78 |     std::cout << "total de vertices: " << maxVertex << std::endl;
      |                                                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:78:56: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   78 |     std::cout << "total de vertices: " << maxVertex << std::endl;
      |                                                        ^~~~~~~~~
      |                                                        '\n'
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:84:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   84 | void Graph::printGraph() { // TODO: NO SE UTILIZA
      |             ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:84:28: warning: missing username/bug in TODO [google-readability-todo]
   84 | void Graph::printGraph() { // TODO: NO SE UTILIZA
      |                            ^~~~~~~~~~~~~~~~~~~~~~
      |                            // TODO(solar): NO SE UTILIZA
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:85:21: warning: backward branch (for loop) is ID-dependent due to member reference to 'vertexCount' and may cause performance degradation [altera-id-dependent-backward-branch]
   85 |     for (int i = 0; i < vertexCount; i++) {
      |                     ^
/home/solar/Desktop/tdp/lab2/src/../include/Graph.h:12:5: note: inferred assignment of ID-dependent member from ID-dependent
   12 |     int vertexCount;
      |     ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:86:14: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   86 |         cout << i << ": ";
      |              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:197:7: note: resolves to this declaration
  197 |       operator<<(int __n);
      |       ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:86:19: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   86 |         cout << i << ": ";
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:87:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   87 |         for (const auto &w : adj[i]) {
      |         ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:87:26: warning: variable name 'w' is too short, expected at least 3 characters [readability-identifier-length]
   87 |         for (const auto &w : adj[i]) {
      |                          ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:87:28: warning: 'operator!=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   87 |         for (const auto &w : adj[i]) {
      |                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp:127:3: note: resolves to this declaration
  127 |   operator!=(const point_const_iterator_& other) const
      |   ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:87:28: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   87 |         for (const auto &w : adj[i]) {
      |                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp:104:3: note: resolves to this declaration
  104 |   operator*() const
      |   ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:87:28: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   87 |         for (const auto &w : adj[i]) {
      |                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ext/pb_ds/detail/unordered_iterator/const_iterator.hpp:78:3: note: resolves to this declaration
   78 |   operator++()
      |   ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:87:33: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   87 |         for (const auto &w : adj[i]) {
      |                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1128:7: note: resolves to this declaration
 1128 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:88:18: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   88 |             cout << w << " ";
      |                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:197:7: note: resolves to this declaration
  197 |       operator<<(int __n);
      |       ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:88:23: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   88 |             cout << w << " ";
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:90:14: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   90 |         cout << endl;
      |              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:90:17: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   90 |         cout << endl;
      |                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:90:17: warning: do not use 'endl' with streams; use '\n' instead [performance-avoid-endl]
   90 |         cout << endl;
      |                 ^~~~
      |                 '\n'
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:94:12: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   94 | int Graph::getMaxDegree() { // TODO: NO SE UTILIZA
      |            ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:94:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   94 | int Graph::getMaxDegree() { // TODO: NO SE UTILIZA
      | ~~~        ^
      | auto                      -> int
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:94:29: warning: missing username/bug in TODO [google-readability-todo]
   94 | int Graph::getMaxDegree() { // TODO: NO SE UTILIZA
      |                             ^~~~~~~~~~~~~~~~~~~~~~
      |                             // TODO(solar): NO SE UTILIZA
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:96:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   96 |     for (int i = 0; i < vertexCount; i++) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:96:21: warning: backward branch (for loop) is ID-dependent due to member reference to 'vertexCount' and may cause performance degradation [altera-id-dependent-backward-branch]
   96 |     for (int i = 0; i < vertexCount; i++) {
      |                     ^
/home/solar/Desktop/tdp/lab2/src/../include/Graph.h:12:5: note: inferred assignment of ID-dependent member from ID-dependent
   12 |     int vertexCount;
      |     ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:97:21: warning: 'max<int>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   97 |         maxDegree = std::max(maxDegree, (int)adj[i].size());
      |                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_algobase.h:257:5: note: resolves to this declaration
  257 |     max(const _Tp& __a, const _Tp& __b)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:97:41: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
   97 |         maxDegree = std::max(maxDegree, (int)adj[i].size());
      |                                         ^~~~~
      |                                         static_cast<int>( )
/home/solar/Desktop/tdp/lab2/src/Graph.cpp:97:49: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   97 |         maxDegree = std::max(maxDegree, (int)adj[i].size());
      |                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1128:7: note: resolves to this declaration
 1128 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:3:1: warning: constructor does not initialize these fields: executionTime [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
    3 | Solver::Solver() : initialized(false), bestSolution(Graph(), 0) {}
      | ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:3:9: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
    3 | Solver::Solver() : initialized(false), bestSolution(Graph(), 0) {}
      |         ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:5:14: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
    5 | bool Solver::initialize(const string &filename) {
      |              ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:5:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    5 | bool Solver::initialize(const string &filename) {
      | ~~~~         ^
      | auto                                            -> bool
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:5:31: warning: no header providing "std::string" is directly included [misc-include-cleaner]
    2 |
    3 | Solver::Solver() : initialized(false), bestSolution(Graph(), 0) {}
    4 |
    5 | bool Solver::initialize(const string &filename) {
      |                               ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:10:21: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   10 |     dangerHeuristic = std::make_unique<DangerHeuristic>(graph);
      |                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/unique_ptr.h:408:19: note: resolves to this declaration
  408 |       unique_ptr& operator=(unique_ptr&&) = default;
      |                   ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:10:23: warning: 'make_unique<DangerHeuristic, Graph &>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   10 |     dangerHeuristic = std::make_unique<DangerHeuristic>(graph);
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/unique_ptr.h:1075:5: note: resolves to this declaration
 1075 |     make_unique(_Args&&... __args)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:10:28: warning: no header providing "std::make_unique" is directly included [misc-include-cleaner]
    2 |
    3 | Solver::Solver() : initialized(false), bestSolution(Graph(), 0) {}
    4 |
    5 | bool Solver::initialize(const string &filename) {
    6 |     if (!graph.createFromFile(filename)) {
    7 |         return false;
    8 |     }
    9 |
   10 |     dangerHeuristic = std::make_unique<DangerHeuristic>(graph);
      |                            ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:10:40: warning: no header providing "DangerHeuristic" is directly included [misc-include-cleaner]
    2 |
    3 | Solver::Solver() : initialized(false), bestSolution(Graph(), 0) {}
    4 |
    5 | bool Solver::initialize(const string &filename) {
    6 |     if (!graph.createFromFile(filename)) {
    7 |         return false;
    8 |     }
    9 |
   10 |     dangerHeuristic = std::make_unique<DangerHeuristic>(graph);
      |                                        ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:11:12: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   11 |     bounds = std::make_unique<Bounds>(graph);
      |            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/unique_ptr.h:408:19: note: resolves to this declaration
  408 |       unique_ptr& operator=(unique_ptr&&) = default;
      |                   ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:11:14: warning: 'make_unique<Bounds, Graph &>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   11 |     bounds = std::make_unique<Bounds>(graph);
      |              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/unique_ptr.h:1075:5: note: resolves to this declaration
 1075 |     make_unique(_Args&&... __args)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:11:31: warning: no header providing "Bounds" is directly included [misc-include-cleaner]
    2 |
    3 | Solver::Solver() : initialized(false), bestSolution(Graph(), 0) {}
    4 |
    5 | bool Solver::initialize(const string &filename) {
    6 |     if (!graph.createFromFile(filename)) {
    7 |         return false;
    8 |     }
    9 |
   10 |     dangerHeuristic = std::make_unique<DangerHeuristic>(graph);
   11 |     bounds = std::make_unique<Bounds>(graph);
      |                               ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:12:9: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   12 |     bnb = std::make_unique<BranchAndBound>(graph, *bounds, *dangerHeuristic);
      |         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/unique_ptr.h:408:19: note: resolves to this declaration
  408 |       unique_ptr& operator=(unique_ptr&&) = default;
      |                   ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:12:11: warning: 'make_unique<BranchAndBound, Graph &, Bounds &, DangerHeuristic &>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   12 |     bnb = std::make_unique<BranchAndBound>(graph, *bounds, *dangerHeuristic);
      |           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/unique_ptr.h:1075:5: note: resolves to this declaration
 1075 |     make_unique(_Args&&... __args)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:12:28: warning: no header providing "BranchAndBound" is directly included [misc-include-cleaner]
    2 |
    3 | Solver::Solver() : initialized(false), bestSolution(Graph(), 0) {}
    4 |
    5 | bool Solver::initialize(const string &filename) {
    6 |     if (!graph.createFromFile(filename)) {
    7 |         return false;
    8 |     }
    9 |
   10 |     dangerHeuristic = std::make_unique<DangerHeuristic>(graph);
   11 |     bounds = std::make_unique<Bounds>(graph);
   12 |     bnb = std::make_unique<BranchAndBound>(graph, *bounds, *dangerHeuristic);
      |                            ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:12:51: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   12 |     bnb = std::make_unique<BranchAndBound>(graph, *bounds, *dangerHeuristic);
      |                                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/unique_ptr.h:445:7: note: resolves to this declaration
  445 |       operator*() const noexcept(noexcept(*std::declval<pointer>()))
      |       ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:12:60: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   12 |     bnb = std::make_unique<BranchAndBound>(graph, *bounds, *dangerHeuristic);
      |                                                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/unique_ptr.h:445:7: note: resolves to this declaration
  445 |       operator*() const noexcept(noexcept(*std::declval<pointer>()))
      |       ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:14:18: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   14 |     bestSolution = ColoringState(graph, graph.getVertexCount());
      |                  ^
/home/solar/Desktop/tdp/lab2/src/../include/ColoringState.h:45:20: note: resolves to this declaration
   45 |     ColoringState &operator=(const ColoringState &other) {
      |                    ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:19:14: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   19 | void Solver::solve() {
      |              ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:21:20: warning: no header providing "std::runtime_error" is directly included [misc-include-cleaner]
    2 |         throw std::runtime_error("Solver not initialized");
      |                    ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:24:18: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   24 |     auto start = std::chrono::steady_clock::now();
      |                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/chrono.h:1275:7: note: resolves to this declaration
 1275 |       now() noexcept;
      |       ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:24:31: warning: no header providing "std::chrono::steady_clock" is directly included [misc-include-cleaner]
    2 |     auto start = std::chrono::steady_clock::now();
      |                               ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:27:12: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   27 |         bnb->solve(bestSolution);
      |            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/unique_ptr.h:454:7: note: resolves to this declaration
  454 |       operator->() const noexcept
      |       ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:28:25: warning: no header providing "std::exception" is directly included [misc-include-cleaner]
    2 |     } catch (const std::exception &e) {
      |                         ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:29:14: warning: no header providing "std::cerr" is directly included [misc-include-cleaner]
    2 |         std::cerr << "Error during solving: " << e.what() << std::endl;
      |              ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:29:19: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   29 |         std::cerr << "Error during solving: " << e.what() << std::endl;
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:29:47: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   29 |         std::cerr << "Error during solving: " << e.what() << std::endl;
      |                                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:29:59: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   29 |         std::cerr << "Error during solving: " << e.what() << std::endl;
      |                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:29:62: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   29 |         std::cerr << "Error during solving: " << e.what() << std::endl;
      |                                                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:29:62: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   29 |         std::cerr << "Error during solving: " << e.what() << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:29:67: warning: no header providing "std::endl" is directly included [misc-include-cleaner]
    2 |         std::cerr << "Error during solving: " << e.what() << std::endl;
      |                                                                   ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:33:16: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   33 |     auto end = std::chrono::steady_clock::now();
      |                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/chrono.h:1275:7: note: resolves to this declaration
 1275 |       now() noexcept;
      |       ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:34:19: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   34 |     executionTime =
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/chrono.h:585:12: note: resolves to this declaration
  585 |         duration& operator=(const duration&) = default;
      |                   ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:35:9: warning: 'duration_cast<std::chrono::duration<long, std::ratio<1, 1000>>, long, std::ratio<1, 1000000000>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   35 |         std::chrono::duration_cast<std::chrono::milliseconds>(end - start);
      |         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/chrono.h:275:7: note: resolves to this declaration
  275 |       duration_cast(const duration<_Rep, _Period>& __d)
      |       ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:35:22: warning: no header providing "std::chrono::duration_cast" is directly included [misc-include-cleaner]
   35 |         std::chrono::duration_cast<std::chrono::milliseconds>(end - start);
      |                      ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:35:67: warning: 'operator-<std::chrono::steady_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>, std::chrono::duration<long, std::ratio<1, 1000000000>>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   35 |         std::chrono::duration_cast<std::chrono::milliseconds>(end - start);
      |                                                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/chrono.h:1141:7: note: resolves to this declaration
 1141 |       operator-(const time_point<_Clock, _Dur1>& __lhs,
      |       ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:38:14: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   38 | void Solver::printSolution() const {
      |              ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:40:14: warning: no header providing "std::cout" is directly included [misc-include-cleaner]
   40 |         std::cout << "No solution available" << std::endl;
      |              ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:40:19: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   40 |         std::cout << "No solution available" << std::endl;
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:40:46: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   40 |         std::cout << "No solution available" << std::endl;
      |                                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:40:49: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   40 |         std::cout << "No solution available" << std::endl;
      |                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:40:49: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   40 |         std::cout << "No solution available" << std::endl;
      |                                                 ^~~~~~~~~
      |                                                 '\n'
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:45:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   45 |     for (int v = 0; v < graph.getVertexCount(); v++) {
      |     ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:45:14: warning: loop variable name 'v' is too short, expected at least 2 characters [readability-identifier-length]
   45 |     for (int v = 0; v < graph.getVertexCount(); v++) {
      |              ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:46:19: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   46 |         std::cout << v << " " << bestSolution.getColor(v) << std::endl;
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:197:7: note: resolves to this declaration
  197 |       operator<<(int __n);
      |       ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:46:24: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   46 |         std::cout << v << " " << bestSolution.getColor(v) << std::endl;
      |                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:46:31: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   46 |         std::cout << v << " " << bestSolution.getColor(v) << std::endl;
      |                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:197:7: note: resolves to this declaration
  197 |       operator<<(int __n);
      |       ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:46:59: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   46 |         std::cout << v << " " << bestSolution.getColor(v) << std::endl;
      |                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:46:62: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   46 |         std::cout << v << " " << bestSolution.getColor(v) << std::endl;
      |                                                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:46:62: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   46 |         std::cout << v << " " << bestSolution.getColor(v) << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:49:15: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   49 |     std::cout << "Total colores: " << bestSolution.getNumColors() << std::endl;
      |               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:49:36: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   49 |     std::cout << "Total colores: " << bestSolution.getNumColors() << std::endl;
      |                                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:197:7: note: resolves to this declaration
  197 |       operator<<(int __n);
      |       ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:49:67: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   49 |     std::cout << "Total colores: " << bestSolution.getNumColors() << std::endl;
      |                                                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:49:70: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   49 |     std::cout << "Total colores: " << bestSolution.getNumColors() << std::endl;
      |                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:49:70: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   49 |     std::cout << "Total colores: " << bestSolution.getNumColors() << std::endl;
      |                                                                      ^~~~~~~~~
      |                                                                      '\n'
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:50:15: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   50 |     std::cout << "Tiempo: " << executionTime.count() << " [ms]" << std::endl;
      |               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:50:29: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   50 |     std::cout << "Tiempo: " << executionTime.count() << " [ms]" << std::endl;
      |                             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:174:7: note: resolves to this declaration
  174 |       operator<<(long __n)
      |       ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:50:54: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   50 |     std::cout << "Tiempo: " << executionTime.count() << " [ms]" << std::endl;
      |                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:50:65: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   50 |     std::cout << "Tiempo: " << executionTime.count() << " [ms]" << std::endl;
      |                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:50:68: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   50 |     std::cout << "Tiempo: " << executionTime.count() << " [ms]" << std::endl;
      |                                                                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:50:68: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   50 |     std::cout << "Tiempo: " << executionTime.count() << " [ms]" << std::endl;
      |                                                                    ^~~~~~~~~
      |                                                                    '\n'
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:53:19: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   53 |         std::cout << "WARNING: La solucion tiene "
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:54:19: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   54 |                   << bestSolution.getNumConflicts() << " conflictos!"
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:197:7: note: resolves to this declaration
  197 |       operator<<(int __n);
      |       ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:54:53: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   54 |                   << bestSolution.getNumConflicts() << " conflictos!"
      |                                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:55:19: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   55 |                   << std::endl;
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:55:22: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   55 |                   << std::endl;
      |                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/solar/Desktop/tdp/lab2/src/Solve.cpp:55:22: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   55 |                   << std::endl;
      |                      ^~~~~~~~~
      |                      '\n'
/home/solar/Desktop/tdp/lab2/src/main.cpp:1:1: warning: system include iostream not allowed [llvmlibc-restrict-system-libc-headers]
    1 | #include <iostream>
      | ^~~~~~~~~~~~~~~~~~~
    2 | #include <limits>
/home/solar/Desktop/tdp/lab2/src/main.cpp:2:1: warning: system include limits not allowed [llvmlibc-restrict-system-libc-headers]
    2 | #include <limits>
      | ^~~~~~~~~~~~~~~~~
    3 | using namespace std;
/home/solar/Desktop/tdp/lab2/src/main.cpp:3:1: warning: do not use namespace using-directives; use using-declarations instead [google-build-using-namespace]
    3 | using namespace std;
      | ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:3:17: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
    3 | using namespace std;
      |                 ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:6:5: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
    6 | int main() {
      |     ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:6:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    6 | int main() {
      | ~~~ ^
      | auto       -> int
/home/solar/Desktop/tdp/lab2/src/main.cpp:7:5: warning: no header providing "std::string" is directly included [misc-include-cleaner]
    3 | using namespace std;
    4 | #include "../include/Solve.h"
    5 |
    6 | int main() {
    7 |     string fileName;
      |     ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:8:9: warning: variable 'option' is not initialized [cppcoreguidelines-init-variables]
    8 |     int option;
      |         ^
      |                = 0
/home/solar/Desktop/tdp/lab2/src/main.cpp:11:5: warning: avoid do-while loops [cppcoreguidelines-avoid-do-while]
   11 |     do {
      |     ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:12:19: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   12 |         std::cout << "\n--------MENU--------\n";
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:13:19: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   13 |         std::cout << "1. Read file\n";
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:14:19: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   14 |         std::cout << "2. Solve\n";
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:15:19: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   15 |         std::cout << "3. Run Tests\n";
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:16:19: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   16 |         std::cout << "4. Exit\n";
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:17:19: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   17 |         std::cout << "Option: ";
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:19:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   19 |         while (!(std::cin >> option)) {
      |         ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:19:16: warning: 'operator!' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   19 |         while (!(std::cin >> option)) {
      |                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_ios.h:129:7: note: resolves to this declaration
  129 |       operator!() const
      |       ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:19:27: warning: 'operator>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   19 |         while (!(std::cin >> option)) {
      |                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/istream:181:7: note: resolves to this declaration
  181 |       operator>>(int& __n);
      |       ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:20:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   20 |             std::cin.clear();
      |             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_ios.h:152:13: note: default parameter was declared here
  152 |       clear(iostate __state = goodbit);
      |             ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:21:29: warning: 'max' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   21 |             std::cin.ignore(numeric_limits<streamsize>::max(), '\n');
      |                             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/limits:1207:7: note: resolves to this declaration
 1207 |       max() _GLIBCXX_USE_NOEXCEPT { return __LONG_MAX__; }
      |       ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:23:17: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   23 |                 << "Numero invalido, se debe seleccionar alguno entre (1-4): ";
      |                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:28:27: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   28 |                 std::cout << "\nEnter the filename: ";
      |                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:29:26: warning: 'operator>><char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   29 |                 std::cin >> fileName;
      |                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4064:5: note: resolves to this declaration
 4064 |     operator>>(basic_istream<char>& __is, basic_string<char>& __str);
      |     ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:31:31: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   31 |                     std::cout << "File read correctly\n";
      |                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:38:31: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   38 |                     std::cout << "Error: Must read a valid file first\n";
      |                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:44:37: warning: no header providing "std::exception" is directly included [misc-include-cleaner]
    1 |                 } catch (const std::exception &e) {
      |                                     ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:45:31: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   45 |                     std::cerr << "Error solving: " << e.what() << std::endl;
      |                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:45:52: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   45 |                     std::cerr << "Error solving: " << e.what() << std::endl;
      |                                                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:45:64: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   45 |                     std::cerr << "Error solving: " << e.what() << std::endl;
      |                                                                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:45:67: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   45 |                     std::cerr << "Error solving: " << e.what() << std::endl;
      |                                                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:45:67: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   45 |                     std::cerr << "Error solving: " << e.what() << std::endl;
      |                                                                   ^~~~~~~~~
      |                                                                   '\n'
/home/solar/Desktop/tdp/lab2/src/main.cpp:54:47: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   54 |                     if (testSolver.initialize("test_graph.txt")) {
      |                                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:56:35: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   56 |                         std::cout << "Test passed successfully\n";
      |                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:59:35: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   59 |                         std::cout << "Test failed: Could not load test file\n";
      |                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:62:31: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   62 |                     std::cerr << "Test execution failed: " << e.what()
      |                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:62:60: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   62 |                     std::cerr << "Test execution failed: " << e.what()
      |                                                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:63:31: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   63 |                               << std::endl;
      |                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:63:34: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   63 |                               << std::endl;
      |                                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:63:34: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   63 |                               << std::endl;
      |                                  ^~~~~~~~~
      |                                  '\n'
/home/solar/Desktop/tdp/lab2/src/main.cpp:70:27: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   70 |                 std::cout << "Exiting program...\n";
      |                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/solar/Desktop/tdp/lab2/src/main.cpp:75:27: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   75 |                 std::cout << "Invalid option. Please select 1-4.\n";
      |                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/predefined_ops.h:158:23: warning: 'operator()<std::pair<int, double>, std::pair<int, double>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  158 |         { return bool(_M_comp(*__it1, *__it2)); }
      |                       ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:58:10: note: resolves to this declaration
   58 |          [](const auto &a, const auto &b) { return a.second < b.second; });
      |          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/predefined_ops.h:158:23: warning: 'operator()<std::pair<int, int>, std::pair<int, int>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  158 |         { return bool(_M_comp(*__it1, *__it2)); }
      |                       ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:19:10: note: resolves to this declaration
   19 |          [](const auto &a, const auto &b) { return a.second > b.second; });
      |          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/predefined_ops.h:196:16: warning: 'operator()<std::pair<int, double>, std::pair<int, double>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  196 |         { return bool(_M_comp(*__it, __val)); }
      |                       ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:58:10: note: resolves to this declaration
   58 |          [](const auto &a, const auto &b) { return a.second < b.second; });
      |          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/predefined_ops.h:196:16: warning: 'operator()<std::pair<int, int>, std::pair<int, int>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  196 |         { return bool(_M_comp(*__it, __val)); }
      |                       ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:19:10: note: resolves to this declaration
   19 |          [](const auto &a, const auto &b) { return a.second > b.second; });
      |          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/predefined_ops.h:240:16: warning: 'operator()<std::pair<int, double>, std::pair<int, double>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  240 |         { return bool(_M_comp(__val, *__it)); }
      |                       ^
/home/solar/Desktop/tdp/lab2/src/BranchAndBound.cpp:58:10: note: resolves to this declaration
   58 |          [](const auto &a, const auto &b) { return a.second < b.second; });
      |          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/predefined_ops.h:240:16: warning: 'operator()<std::pair<int, int>, std::pair<int, int>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  240 |         { return bool(_M_comp(__val, *__it)); }
      |                       ^
/home/solar/Desktop/tdp/lab2/src/Bounds.cpp:19:10: note: resolves to this declaration
   19 |          [](const auto &a, const auto &b) { return a.second > b.second; });
      |          ^
Suppressed 1019423 warnings (1019423 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
